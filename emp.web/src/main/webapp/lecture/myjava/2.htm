<html>

<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">
<title>본 구조] </title>
<meta name="generator" content="Namo WebEditor v5.0">
</head>

<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">
<P ALIGN=RIGHT><FONT SIZE=7 COLOR=WHITE><SPAN STYLE="font-size:35pt;"><FONT FACE="바탕">본 구조]</FONT></SPAN></FONT>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV032.GIF" BORDER=0 ALIGN=LEFT>
<BR>
<P><FONT SIZE=4><SPAN STYLE="font-size:15pt;"><FONT FACE="바탕">이 장에서는 프로그램을 작성할 때 구성되는 문장의 기본 요건과 기본 데이터 유형(primitive data type) 및 배열, 그리고 여러 가지 연산자와 제어문을 통하여 자바의 기본적인 문법에 대하여 자세히 알아본다. C언어를 경험했다면 많은 부분이 C언어와 유사한 것을 알 수 있을 것이다. 
</FONT></SPAN></FONT><BR>
<P>
<P>
<BR>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV034.GIF" BORDER=0 ALIGN=LEFT>
<P><FONT SIZE=5 COLOR=PURPLE><SPAN STYLE="font-size:20pt;"><B><FONT FACE="Bookman Old Style">2.1  </FONT><FONT FACE="바탕">기본</FONT><FONT FACE="Bookman Old Style"> </FONT><FONT FACE="바탕">구성</FONT><FONT FACE="Bookman Old Style"> </FONT><FONT FACE="바탕">요소</FONT></B></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">여기서는 프로그램의 실행에는 전혀 영향을 미치지 않고 프로그램을 이해하는데 도움을 주는 주석문과 키워드, 그리고 8개의 기본데이터 유형과 한 개의 참조 데이터 유형에 대해 알아보기로 한다.</FONT>
<P><FONT FACE="바탕">모든 프로그램 언어에서와 마찬가지로 매우 중요하게 사용되는 배열에 대해서도 상술하고자 한다.</FONT>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.1.1 </FONT><FONT FACE="바탕">주석문과</FONT><FONT FACE="HY부활M"> </FONT><FONT FACE="바탕">기본</FONT><FONT FACE="HY부활M"> </FONT><FONT FACE="바탕">원칙</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">주석문을 잘 사용하면 추후 프로그램을 분석하는데 매우 유익하다. 일반적으로 프로그램을 작성할 때는 알고리즘을 분석한 상태이기 때문에 프로그램의 모든 부분을 상세히 파악하고 있지만 시간이 지나고 업무가 달라진 상태에서 예전에 작성한 프로그램을 빠른 시간내에 이해하기는 매우 어려워진다. 따라서, 가능한한 프로그램을 작성할 때 많은 주석문을 만들어 주는 기본 원칙을 지키는 것이 시간과 노력을 절감하는 지름길인 것이다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.1.1.1 </FONT><FONT FACE="바탕">주석문</FONT><FONT FACE="HY울릉도M">(Comment)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">주석문은 프로그램의 실행에는 전혀 영향을 미치지 않는 문장으로서, 프로그램의 이해를 도와주는데 주로 사용된다. 주석문을 사용하는 방법은 다음 세 가지가 있다.</FONT>
<BR>
<P>  <FONT FACE="돋움">῁  // 한 줄 주석</FONT>
<P>  <FONT FACE="돋움">῁  /* 한 줄 또는 여러 줄 주석 */</FONT>
<P>  <FONT FACE="돋움">῁  /** document 생성용 주석 */</FONT>
<BR>
<P><FONT FACE="바탕">//는 주석 내용이 한 줄일 때 편리하다. //는 줄의 어느 위치에나 올 수 있으며, 이 부호 바로 다음부터 그 줄의 끝까지의 내용이 주석으로 간주된다.</FONT>
<BR>
<P><FONT FACE="바탕">/* */는 주로 여러 줄의 주석문을 만들 때 사용된다. 즉, /*와 */ 사이에 있는 모든 내용이 주석으로 간주된다.</FONT>
<BR>
<P><FONT FACE="바탕">/** */는 온라인 설명서용 주석인데 일반적으로 변수나 메소드 등의 선언문 바로 앞에 오며, javadoc 명령에 의해 자동으로 생성되는 설명서용 html 파일에 주석 내용이 포함된다. javadoc은 JDK 안에 들어있는 utility로 패키지, 클래스 등의 설명서를 만들 때 사용된다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.1.1.2 </FONT><FONT FACE="바탕">세미콜론</FONT><FONT FACE="HY울릉도M">(;), </FONT><FONT FACE="바탕">블록</FONT><FONT FACE="HY울릉도M">(Block), </FONT><FONT FACE="바탕">공백</FONT><FONT FACE="HY울릉도M">(Whitespace)</FONT></SPAN></FONT>
<BR>
<P> <FONT FACE="돋움">∘ 논리적인 한 문장이 끝날 때 반드시 세미콜론(;)을 붙여준다.  이는 파스칼과 동일하다.</FONT>
<P> <FONT FACE="돋움">∘ 블록은 괄호(curly brace), 즉 &quot;{&quot; 와 &quot;}&quot;로 묶여진 부분을 말하며, 복합문을 구성하는 요소이다.</FONT>
<P>    <FONT FACE="돋움">즉, 종속된 문장이 다수개일 때 &quot;{&quot;로 시작하고 &quot;}&quot; 닫아준다. 이는 파스칼의 begin∼end와 같다. 
</FONT><P> <FONT FACE="돋움">∘ 공백(Whitespace)은 빈칸, 탭, 빈 줄 등이 있으며, 이러한 공백은 소스 코드를 보기 좋게 하고 알아보기 쉽게 하는데 사용된다. 즉, 프로그램을 구조화 형태로 표현하는데 유용하다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.1.1.3 </FONT><FONT FACE="바탕">식별자</FONT><FONT FACE="HY울릉도M">(Identifier)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">자바 언어에서 식별자는 클래스 명, 메소드 명, 변수 명 등 사용자가 만들어 이용하는 고유한 이름을 식별자라고 하며 다음과 같은 몇 가지 규칙을 반드시 지켜야 한다.</FONT>
<BR>
<P> <FONT FACE="돋움">∘ 대.소문자를 구분하고, 길이에는 제한이 없다.</FONT>
<P> <FONT FACE="돋움">∘ 유니코드 문자나 &quot;_(underscore)&quot;, &quot;$&quot;로 시작한다. 즉, 숫자로 시작하면 안 되며,  특수문자(!, @, # 등...) 중에서는 &quot;_&quot;과 &quot;$&quot;만 시작할 때 사용할 수 있다. 그러나 &quot;_&quot;와 &quot;$&quot;의 경우는 식별자에 이 기호를 포함시키라는 로컬 시스템의 규칙이 있거나 부득이한 경우가 아니면 사용하지 않는 것이 좋다. 또한 유니코드를 지원하기 때문에 한글 사용이 가능하지만 ASCII 코드를 사용하는 것이 좋다.</FONT>
<P> <FONT FACE="돋움">∘ 첫 문자 외에는 문자, 숫자, 밑줄, 달러기호 등을 임의의 순서로 사용할 수 있다.</FONT>
<P> <FONT FACE="돋움">∘ 키워드는 식별자로 사용할 수 없다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 잘못된 식별자의 예로서 컴파일 시 오류가 발생한다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=98>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">잘못된 예</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=85%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">설    명</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">3test</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">@test</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">this</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=85%>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">식별자는 숫자로 시작하면 안 된다.</FONT></SPAN></FONT>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">식별자의 첫 문자에 올 수 있는 특수문자는 &quot;_&quot;와 &quot;$&quot;뿐이다.</FONT></SPAN></FONT>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">this는 키워드이다. 키워드는 식별자로 사용할 수 없다.</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음은 올바른 사용 예를 보인 것이다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=578 HEIGHT=98>
<TD VALIGN=MIDDLE WIDTH=15%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">바른 사용 예</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=84%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">설    명</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=15%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">test3</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">_test</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">This</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=84%>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">숫자는 식별자의 첫 문자만 아니면 어느 곳이나 올 수 있다.</FONT></SPAN></FONT>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">&quot;_&quot;는 식별자의 첫 문자로 사용할 수 있다.</FONT></SPAN></FONT>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">This는 자바에서 사용되는 this와는 다르다.(대/소문자 구분)</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.1.1.4 </FONT><FONT FACE="바탕">코딩</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">규칙</FONT><FONT FACE="HY울릉도M">(Naming Conventions)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">코딩을 할 때 식별자에 관련된 아래와 같은 몇 가지 규정이 있다. 꼭 아래와 같은 형식을 따르라는 것은 아니고 이는 프로그램의 이해도를 높이기 위한 프로그래머들간의 규칙이라고 생각하면 된다. 가능하면 클래스 이름이나 변수 이름, 메소드 이름 등을 만들 때에 이러한 규칙으로 만들기를 권장한다.</FONT>
<BR>
<P>  <FONT FACE="바탕">⁙ 클래스 이름/인터페이스 이름</FONT>
<P><FONT FACE="바탕">- 명사나 형용사를 서술적으로 연결하여 사용한다.</FONT>
<P><FONT FACE="바탕">- 첫 글자는 대문자로 표기한다.</FONT>
<P><FONT FACE="바탕">- 연결된 단어의 첫 글자도 대문자로 표기한다.</FONT>
<P><FONT FACE="바탕">- 나머지 문자는 소문자로 표기한다.</FONT>
<P><FONT FACE="바탕">- &quot;$&quot;은 내부 클래스에서 특별한 의미가 있기 때문에 사용을 권장하지 않는다.</FONT>
<BR>
<P><FONT FACE="바탕">이상의 규칙을 적용한 예를 들면 다음과 같다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=597 HEIGHT=62>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">class ClassOne { }</FONT>
<P><FONT FACE="Courier New">class MyCalss { }</FONT>
<P><FONT FACE="Courier New">interface Account { }</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>  <FONT FACE="바탕">⁙ 변수 이름</FONT>
<P><FONT FACE="바탕">- 명사적 의미를 갖게 한다.</FONT>
<P><FONT FACE="바탕">- 첫 글자는 소문자, 연결 단어의 첫 글자는 대문자로 표기한다.</FONT>
<P><FONT FACE="바탕">- 일반적으로 변수 이름에서는 &quot;_(underscore character)&quot;를 사용하지 않는다.</FONT>
<BR>
<P><FONT FACE="바탕">이상의 규칙을 적용한 예를 들면 다음과 같다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=597 HEIGHT=42>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int variableOne;</FONT>
<P><FONT FACE="Courier New">String customerName;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>    <FONT FACE="바탕">⁙ 메소드 이름</FONT>
<P><FONT FACE="바탕">- 동사적 의미를 갖게 한다.</FONT>
<P><FONT FACE="바탕">- 첫 글자는 소문자, 연결 단어의 첫 글자는 대문자로 표기한다.</FONT>
<P><FONT FACE="바탕">- 메소드 이름 뒤에는 한 쌍의 괄호&quot;()&quot;　가 온다.</FONT>
<P><FONT FACE="바탕">- 일반적으로 메소드 이름에서는 &quot;_(underscore character)&quot;를 사용하지 않는다.</FONT>
<BR>
<P><FONT FACE="바탕">이상의 규칙을 적용한 예를 들면 다음과 같다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=597 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int methodOne() { }</FONT>
<P><FONT FACE="Courier New">void printTheResults() { }</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>  <FONT FACE="바탕">⁙ 상수 이름</FONT>
<P><FONT FACE="바탕">- 모든 문자는 대문자로 표기한다.</FONT>
<P><FONT FACE="바탕">- 단어와 단어 사이는 &quot;_&quot;(underscore characters)로 연결한다.</FONT>
<BR>
<P><FONT FACE="바탕">이상의 규칙을 적용한 예를 들면 다음과 같다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=597 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">final int CONSTANT_ONE = 1234;</FONT>
<P><FONT FACE="Courier New">final double PI = 3.141592;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>  <FONT FACE="바탕">⁙ 제어문</FONT>
<P><FONT FACE="바탕">- if∼else 문이나 for 문과 같은 제어문은 단일 명령문이라 하더라도 괄호({ }) 안에 넣는다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=597 HEIGHT=103>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">if (condition) {</FONT>
<P>	<FONT FACE="Courier New">do something1;</FONT>
<P><FONT FACE="Courier New">} else {</FONT>
<P>	<FONT FACE="Courier New">do something2;</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>  <FONT FACE="바탕">⁙ 빈칸</FONT>
<P><FONT FACE="바탕">- 하나의 줄에는 하나의 명령문만 기술하고 4칸 또는 탭으로 들여 쓰기를 하면 코드를 알아보기 쉽다.</FONT>
<BR>
<P>  <FONT FACE="바탕">⁙ 주석</FONT>
<P><FONT FACE="바탕">- 의미가 분명하지 않은 코드 부분에 주석을 사용한다.</FONT>
<P><FONT FACE="바탕">- 한 줄에 해당하는 주석을 넣을 때는 주석 구분 기호 //를 사용한다.</FONT>
<P><FONT FACE="바탕">- 여러 줄의 주석을 사용할 때는 주석 구분 기호 /* ... */를 사용한다.</FONT>
<P><FONT FACE="바탕">- 온라인 설명서용 주석을 넣을 때에 /** ... */를 구분 문자로 사용하면 나중에 유지 보수 작업을 하는 사람들이 javadoc으로 만든 API를 사용할 수 있다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=597 HEIGHT=123>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">// </FONT><FONT FACE="바탕">한</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">라인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">차지하는</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">주석</FONT>
<BR>
<P><FONT FACE="Courier New">/* </FONT><FONT FACE="바탕">길이가</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">한</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">라인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">이상</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">길어져서</FONT>
<P>	<FONT FACE="바탕">여러</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">라인의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">공간을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">차지하는</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">주석</FONT><FONT FACE="Courier New"> */</FONT>
<BR>
<P><FONT FACE="Courier New">/** </FONT><FONT FACE="바탕">온라인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">설명서</FONT><FONT FACE="Courier New">(API Document)</FONT><FONT FACE="바탕">용</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">주석</FONT><FONT FACE="Courier New"> */</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음의 예제를 보자</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=655 HEIGHT=119>
<TD VALIGN=TOP WIDTH=9%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT></TD>
<TD VALIGN=TOP WIDTH=90%>
<P><FONT FACE="Courier New">public class </FONT><B><FONT FACE="Courier New">WizardBank</FONT></B><FONT FACE="Courier New"> {</FONT>
<P>	<FONT FACE="Courier New">public static void </FONT><B><FONT FACE="Courier New">main</FONT></B><FONT FACE="Courier New"> (String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int </FONT><B><FONT FACE="Courier New">customerAccount</FONT></B><FONT FACE="Courier New"> = 10;</FONT>
<P>	<FONT FACE="Courier New">} // end main method</FONT>
<P><FONT FACE="Courier New">} // end class</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">위의 예에서 WizardBank는 클래스 명, main은 메소드 명, customerAccount는 변수 명을 나타낸다.</FONT>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.1.2 </FONT><FONT FACE="바탕">키워드와</FONT><FONT FACE="HY부활M"> </FONT><FONT FACE="바탕">리터럴</FONT><FONT FACE="HY부활M">(Literal)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">다음은 자바에서 사용되는 키워드를 나타낸 것이다. 식별자에 키워드를 넣을 수는 있지만 그렇다고 키워드를 식별자로 사용해서는 안 된다. 예를 들어 &quot;finalSample&quot;은 유효한 식별자이지만 &quot;final&quot;은 그렇지 않다.</FONT>
<P><FONT FACE="바탕">아래의 목록에서 true, false, null 등이 있지만 엄격히 말해서 이러한 것은 키워드가 아니라 리터럴이다. 자바에서 true, false, null 등의 리터럴은 C언어의 리터럴과 같은 대문자가 아니라 소문자이다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=638 HEIGHT=205>
<TD VALIGN=MIDDLE WIDTH=19%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">abstract</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">assert</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">boolean</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">break</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">byte</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">case</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">catch</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">char</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">class</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">continue</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=19%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">default</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">do</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">double</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">else</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">extends</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">false</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">final</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">finally</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">float</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">for</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=20%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">if</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">implement</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">import</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">instanceof</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">interface</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">long</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">native</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">new</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">null</FONT></SPAN></FONT>	</TD>
<TD VALIGN=MIDDLE WIDTH=20%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">package</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">private</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">protected</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">public</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">return</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">short</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">static</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">strictfp</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">super</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">switch</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=19%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">synchronized</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">this</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">throw</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">throws</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">transient</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">true</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">try</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">void</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">volatile</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">while</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">* const와 goto는 키워드이지만 자바에서는 사용하지 않는다.</FONT>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.1.3 </FONT><FONT FACE="바탕">자료형</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">자바는 8개의 기본데이터 유형과 한 개의 참조(Reference) 데이터 유형을 사용한다. 이 유형의 데이터들은 리터럴 값이나 변수로 사용될 수 있다. 이 중 기본 데이터 유형은 네 가지 종류, 즉 논리형(Logical), 텍스트형(Textual), 정수형(Integral), 부동 소수점형(Floating point) 등으로 구분할 수 있다. 
</FONT><P><FONT FACE="바탕">다음 표에 나와 있는 유형 중에서 String을 제외하고는 모두 기본 데이터 유형에 속한다. String은 Reference형으로 문자열을 표현할 때 문자열 객체를 사용하여 처리할 수 있도록 String 클래스를 따로 지원하고 있다. 
</FONT><P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=661 HEIGHT=464>
<TD VALIGN=MIDDLE WIDTH=18%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">유형</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">크기</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">범    위</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">초기값</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE ROWSPAN=4 WIDTH=18%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">정수형</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Integral</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">1 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=102 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">-2^7 SIM 2^7 -1  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

        </tr>
</TABLE>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(-128 ~ 127)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">short</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">2 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=113 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">-2^15 SIM 2^15 -1  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

        </tr>
</TABLE>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(-32,768 ~ 32,767)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">4 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=113 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">-2^31 SIM 2^31 -1  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

        </tr>
</TABLE>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(-2,147,483,648 ~ 2,147,483,647)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">long</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">8 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=113 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">-2^63 SIM 2^63 -1  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

        </tr>
</TABLE>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(-9,223,372,036,854,775,808 ~</FONT></SPAN></FONT>
<P>  <FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">9,223,372,036,854,775,807)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0L</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE ROWSPAN=2 WIDTH=18%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">실수형</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Floating-Point</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">float</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">4 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">&plusmn;(1.401e-45F ~ 3.402e+38F)</FONT></SPAN></FONT>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(7자리의 소수)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0.0F</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">double</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">8 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">&plusmn;(4.940e-324 ~ 1.797e+308)</FONT></SPAN></FONT>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(15자리의 소수)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0.0D</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=18%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">논리형</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Logical</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">boolean</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">1 bit</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">true 또는 false</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">false</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE ROWSPAN=2 WIDTH=18%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">문자형</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Textual</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">char</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">2 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\u0000 ∼ \uFFFF</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">'\u0000'</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">String</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">variable</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<P><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">각 위치에서 \u0000 ∼ \uFFFF</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">null</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE COLSPAN=2 WIDTH=30%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">All reference type</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=11%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=46%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=12%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">null</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.1.3.1 </FONT><FONT FACE="바탕">정수형</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">정수형에는 4가지 유형이 있는데, byte, short, int, long 등의 키워드를 사용하여 선언한다. 정수형은 10진수, 8진수, 16진수 등의 형태로 표현한다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=192>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">IntegerExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class IntegerExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main (String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int decimalValue = 7;</FONT>
<P>		<FONT FACE="Courier New">int octalValue = 077;</FONT>
<P>		<FONT FACE="Courier New">int hexaValue = 0xFEFE;</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=795 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">int decimalValue = 17;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">십진수 7을 대입한 것이다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=795 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">4:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">int octalValue = 077;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">첫 머리에 붙은 0(Zero)은 8진수 값임을 표시하는 것이다. 실제로 octalValue에는 8진수 77의 십진수 값인 63이 저장된다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=795 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">5:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">int hexaValue = 0xFEFE;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">첫 머리에 붙은 0x는 16진수 값임을 표시하는 것이다. hexaValue에는 16진수 FEFE의 십진수 값인 65278값이 저장된다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 4가지 정수형의 크기와 범위를 타나낸 것이다. 범위는 2의 보수로 정의되며, 플랫폼에 관계없이 사용할 수 있다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=558 HEIGHT=278>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">유형</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">저장크기</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=57%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">범위</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">초기값</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">1 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=57%>
<P ALIGN=CENTER>
<CENTER>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=102 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">-2^7 SIM 2^7 -1  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

            </tr>
</TABLE>
</CENTER>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(-128 ~ 127)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">short</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">2 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=57%>
<P ALIGN=CENTER>
<CENTER>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=113 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">-2^15 SIM 2^15 -1  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

            </tr>
</TABLE>
</CENTER>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(-32,768 ~ 32,767)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">4 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=57%>
<P ALIGN=CENTER>
<CENTER>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=113 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">-2^31 SIM 2^31 -1  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

            </tr>
</TABLE>
</CENTER>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(-2,147,483,648 ~ 2,147,483,647)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">long</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">8 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=57%>
<P ALIGN=CENTER>
<CENTER>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=113 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">-2^63 SIM 2^63 -1  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

            </tr>
</TABLE>
</CENTER>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(-9,223,372,036,854,775,808 ~</FONT></SPAN></FONT>
<P ALIGN=CENTER>  <FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">9,223,372,036,854,775,807)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0L</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음의 예를 보자</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=209>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">IntegerTypeExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class IntegerTypeExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main (String[] args) {</FONT>
<P>		<FONT FACE="Courier New">byte b = 214748364;</FONT>
<P>		<FONT FACE="Courier New">short s = 214748364;</FONT>
<P>		<FONT FACE="Courier New">int i = 214748364;</FONT>
<P>		<FONT FACE="Courier New">long l = 214748364;</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P> 
<P><FONT FACE="바탕">정수형 다음에 &quot;L&quot;자가 붙지 않으면 모두 int형이며, 대문자 &quot;L&quot;이나 소문자 &quot;l&quot;을 붙여 주면 long형 값임을 표시하는 것으로, 대문자와 소문자 모두 사용할 수 있지만 소문자를 사용하면 숫자 1과 구분하기 어렵기 때문에 사용하지 않는 것이 좋다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">byte b = 214748364;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">컴파일 시 오류가 발생한다. byte형 변수 b에 넣을 값인 214748364가 최대 범위를 벗어나기 때문이다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">4:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">short s = 214748364;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">컴파일 시 오류가 발생한다. short형 변수 s에 넣을 값 214748364이 byte형의 최대 범위를 벗어나기 때문이다.</FONT>
<BR>
<P><FONT FACE="바탕">3번째 줄과 4번째 줄의 경우 오류가 발생하지 않게 하려면 숫자 앞에 (byte)와 (short)를 넣어서 강제로 숫자를 캐스팅(Casting)해서 범위를 축소시켜야 한다. 물론 값을 출력하면 전혀 다른 값이 나올 수 있다. 캐스팅에 관해서는 뒤에서 자세히 설명하기로 한다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=53>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">byte b = </FONT><B><FONT FACE="Courier New">(byte)</FONT></B><FONT FACE="Courier New">214748364;</FONT>
<P>		<FONT FACE="Courier New">short s = </FONT><B><FONT FACE="Courier New">(short)</FONT></B><FONT FACE="Courier New">214748364;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">5:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">int i = 214748364;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">정상적으로 컴파일 된다. int형 변수의 i에 넣고자 값인 214748364가 int형의 표현 범위에 맞기 때문이다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">6:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">long l = 214748364;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">정상적으로 컴파일 된다. long형 변수의 l에 넣고자 하는 값 214748364가 long형의 표현 범위에 맞기 때문이다. 위의 경우 보다 올바른 표기법은 숫자 뒤에 long형임을 나타내는 &quot;L&quot;을 붙여 주는 것이다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">6:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">long l = 214748364</FONT><B><FONT FACE="Courier New">L</FONT></B><FONT FACE="Courier New">;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">정수형은 8진수, 10진수, 16진수를 사용하여 입력할 수 있다. 10진수의 경우 앞에 0(Zero)이 아닌 숫자로 시작하여 표기하고 0∼9까지의 숫자를 사용한다. 8진수는 숫자 앞에 0을 붙이고, 0∼7까지의 숫자를 사용한다. 16진수는 16진수 숫자 앞에 0x 또는 0X를 붙이고, 숫자 표기를 위한 알파벳은 대/소문자를 구분하지 않는다. 16진수는 0∼9, A∼F까지의 숫자를 사용한다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=613 HEIGHT=126>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">10진수</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">8진수</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">16진수</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int i = 65</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int i = 0101</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int i = 0x41</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int i = 0X41</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int i = 97</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int i = 0141</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=33%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int i = 0x61</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int i = 0X61</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=241>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT COLOR=WHITE><SPAN STYLE="font-size:13pt;"><FONT FACE="바탕">정수형 변수의 연산</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=100%>
<P><FONT FACE="바탕">정수형 변수에 있어서 int형 보다 작은 자료형(byte, short)의 연산은  int형으로의 묵시적 형 변환이 일어난다. 다음의 예는 컴파일시 오류가 발생한다.</FONT>
<P>	<FONT FACE="바탕">short a, b, c;</FONT>
<P>	<FONT FACE="바탕">a = 1;</FONT>
<P>	<FONT FACE="바탕">b = 2;</FONT>
<P>	<FONT FACE="바탕">c = a + b;</FONT>	<FONT FACE="바탕">//Error</FONT>
<P><FONT FACE="바탕">위의 예에서는 변수 a와 b의 연산 결과를 다음과 같이 캐스팅(Casting)해 주어야 한다.</FONT>
<P>	<FONT FACE="바탕">c = (short)(a + b);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.1.3.2 </FONT><FONT FACE="바탕">실수형</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">실수형에는 2가지가 있는데, float, double 키워드를 사용하여 선언하며  IEEE754 표준을 따르는 근사값을 사용하여 표현된다. 실수형은 디폴트형이 double이므로 float형으로 지정하려면 숫자 뒤에 &quot;F&quot; 또는 &quot;f&quot;를 붙여준다. 또한 정확히 하기 위해 double형 뒤에 &quot;D&quot;또는 &quot;d&quot;를 붙여 주기도 하는데, 소수점 표현 방식인 10진수형 표현방식과, 과학 기술용 지수함수 표기법인 의사코드(Pseudo-scientific) 방식이 있다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=539 HEIGHT=126>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">유형</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">크기</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=56%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">범    위</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=15%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">초기값</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">float</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">4 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=56%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">&plusmn;(1.401e-45F ~ 3.402e+38F)</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(7자리의 소수)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=15%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0.0F</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=14%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">double</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">8 byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=56%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">&plusmn;(4.940e-324 ~ 1.797e+308)</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(15자리의 소수)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=15%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0.0D</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=175>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">RealExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class RealExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main (String[] args) {</FONT>
<P>		<FONT FACE="Courier New">float f = 1.1;</FONT>	<FONT FACE="Courier New">//Error</FONT>
<P>		<FONT FACE="Courier New">double d = 1.1;</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">float f = 1.1;</FONT>	<FONT FACE="Courier New">//Error</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">컴파일 시 오류가 발생한다. 실수의 상수 표현형은 무조건 double형인데, float형 변수에 double형 값을 넣으려고 했기 때문에 발생한 것이다. 3번째 줄의 경우에 오류가 발생하지 않게 하려면 다음과 같이 숫자 뒤에 float형 숫자임을 명시해 주는 &quot;F&quot; 또는 &quot;f&quot;를 넣어야 한다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">float f = 1.1</FONT><B><FONT FACE="Courier New">F</FONT></B><FONT FACE="Courier New">;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.1.3.3 </FONT><FONT FACE="바탕">논리형</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">논리형 값에는 &quot;true&quot;와 &quot;false&quot; 두 가지 상태가 있는데 이를 boolean형이라고 한다. 정수형과 논리형은 서로 캐스팅 처리할 수 없으며, C언어에서는 숫자 값을 논리 값으로 해석하여, 0을 false로 다루고 0이 아닌 값은 true로 다루지만 자바에서는 허용되지 않는다. 
</FONT><BR>
<P><FONT FACE="바탕">다음은 boolean 변수 선언문과 대입문의 예이다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=214>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">BooleanExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class BooleanExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main (String[] args) {</FONT>
<P>		<FONT FACE="Courier New">boolean one = false;</FONT>
<P>		<FONT FACE="Courier New">boolean two = False;</FONT>		<FONT FACE="Courier New">//Error</FONT>
<P>		<FONT FACE="Courier New">boolean three = &quot;false&quot;;</FONT>	<FONT FACE="Courier New">//Error</FONT>
<P>		<FONT FACE="Courier New">boolean four = 1;</FONT>			<FONT FACE="Courier New">//Error</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">boolean one = false;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">올바른 대입문이다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">4:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">boolean two = False;</FONT>		<FONT FACE="Courier New">//Error</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">잘못된 대입문이다. 리터럴(literal)은 모두 소문자여야 한다. False는 false와 엄연히 다른데, 대문자와 소문자를 확실히 구분하기 때문이다.</FONT>
<P> 
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">5:</FONT></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P>		<FONT FACE="Courier New">boolean three = &quot;false&quot;;</FONT>	<FONT FACE="Courier New">//Error</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">잘못된 대입문이다. 6번째 줄은 &quot;false&quot;라는 문자열 값을 boolean형 변수에 대입하려고 하기 때문에 컴파일 오류가 발생한다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">6:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">boolean four = 1;</FONT>			<FONT FACE="Courier New">//Error</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">잘못된 대입문이다. C언어에서는 가능하지만 자바에서는 boolean형 변수에는 오로지 true 또는 false 중 하나만 대입이 가능하다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 각 데이터 타입별 최소값과 최대값을 알아보기 위한 예이다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=821>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">DataTypeSize.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT>
<P><FONT FACE="Courier New">19:</FONT>
<P><FONT FACE="Courier New">20:</FONT>
<P><FONT FACE="Courier New">21:</FONT>
<P><FONT FACE="Courier New">22:</FONT>
<P><FONT FACE="Courier New">23:</FONT>
<P><FONT FACE="Courier New">24:</FONT>
<P><FONT FACE="Courier New">25:</FONT>
<P><FONT FACE="Courier New">26:</FONT>
<P><FONT FACE="Courier New">27:</FONT>
<P><FONT FACE="Courier New">28:</FONT>
<P><FONT FACE="Courier New">29:</FONT>
<P><FONT FACE="Courier New">30:</FONT>
<P><FONT FACE="Courier New">31:</FONT>
<P><FONT FACE="Courier New">32:</FONT>
<P><FONT FACE="Courier New">33:</FONT>
<P><FONT FACE="Courier New">34:</FONT>
<P><FONT FACE="Courier New">35:</FONT>
<P><FONT FACE="Courier New">36:</FONT>
<P><FONT FACE="Courier New">37:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class DataTypeSize {</FONT>
<BR>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<BR>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\n byte type&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMin : &quot; + Byte.MIN_VALUE);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMax : &quot; + Byte.MAX_VALUE);</FONT>
<BR>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\n short type&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMin : &quot; + Short.MIN_VALUE);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMax : &quot; + Short.MAX_VALUE);</FONT>
<BR>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\n int type&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMin : &quot; + Integer.MIN_VALUE);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMax : &quot; + Integer.MAX_VALUE);</FONT>
<BR>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\n long type&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMin : &quot; + Long.MIN_VALUE);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMax : &quot; + Long.MAX_VALUE);</FONT>
<BR>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\n float type&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMin : &quot; + Float.MIN_VALUE);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMax : &quot; + Float.MAX_VALUE); 
</FONT><BR>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\n double type&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMin : &quot; + Double.MIN_VALUE);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMax : &quot; + Double.MAX_VALUE);</FONT>
<BR>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\n char type&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMin : &quot; + Character.MIN_VALUE);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\tMax : &quot; + Character.MAX_VALUE); 
</FONT><BR>
<P>		<FONT FACE="Courier New">System.out.println();</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot; boolean : &quot; + Boolean.TRUE); </FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot; boolean : &quot; + Boolean.FALSE);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.1.3.4 </FONT><FONT FACE="바탕">문자</FONT><FONT FACE="HY울릉도M">(char)</FONT><FONT FACE="바탕">형</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">및</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">문자열</FONT><FONT FACE="HY울릉도M">(String)</FONT><FONT FACE="바탕">형</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">단일 문자는 char형으로 표현한다. char형은 0∼216의 범위 내에서 부호가 없는 16비트(2바이트) 숫자를 사용하여 유니 코드 문자를 표현한다. 리터럴 char형은 홑 따옴표(' ')안에 넣어야 한다.</FONT>
<P><FONT FACE="바탕">String형은 하나의 클래스이며, 일련의 문자열을 표현하는데 사용된다. 문자 자체는 유니 코드지만, char형으로 되어 있는 탈출시퀸스(escape sequence) 스타일도 String형에서 사용할 수 있다. String형은 겹 따옴표(&quot; &quot;)안에 넣는다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 문자 선언문과 대입문의 예를 보인 것이다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=231>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">TextualExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class TextualExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main (String[] args) {</FONT>
<P>		<FONT FACE="Courier New">char one = 'A';</FONT>
<P>		<FONT FACE="Courier New">char two = '\t';</FONT>
<P>		<FONT FACE="Courier New">char three = '\u????';  //????</FONT><FONT FACE="바탕">대신</FONT><FONT FACE="Courier New"> 16</FONT><FONT FACE="바탕">진수</FONT><FONT FACE="Courier New"> 4</FONT><FONT FACE="바탕">자리</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">입력</FONT>
<P>		<FONT FACE="Courier New">String four = &quot;\u???? \u????&quot;;</FONT>
<P>		<FONT FACE="Courier New">String five = &quot;dream&quot;;</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">char ont = 'A';</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">일반적인 아스키문자를 대입한 예이다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">4:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">char two = '\t';</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">탭과 같은 특수문자는 탈출시퀀스로 표현할 수 있다.</FONT>
<P><FONT FACE="바탕">다음은 탈출 시퀀스를 나타낸 것이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=558 HEIGHT=106>
<TD VALIGN=MIDDLE WIDTH=10%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\n</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">New Line(\u000A)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=10%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\f</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Form Feed(\u000C)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=10%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\t</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Tab(\u0009)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=10%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\\</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Backslash(\u005C)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=10%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\b</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Backspace(\u0008)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=10%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\'</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Single Quote(\u0027)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=10%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\r</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Return(\u000D)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=10%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">\&quot;</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">Double Quote(\u0022)</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">5:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">char three = '\u????';</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">유니코드를 이용하여 문자를 나타낸 것이다. ???? 는 4개의 16진수 숫자로 표현된다. 예를 들어 '\u03A6'을 입력하면 
</FONT><TABLE BORDER=0 CELLPADDING=2 WIDTH=14 HEIGHT=20>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">phi  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE><FONT FACE="바탕">(phi)를 나타낸다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">6:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">String four = &quot;\u???? \u????&quot;;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">유니코드를 이용하여 연속된 문자열을 문자를 나타내는 것이다. ???? 는 4개의 16진수 숫자로 표현된다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">7:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">String five = &quot;dream&quot;;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">일반적인 문자열의 할당문이다. char형이 아스키를 포함한 유니코드를 지원하는 16비트(2바이트) 크기를 차지하기 때문에 String에서도 각각의 문자는 영문자라 할 지라도 16비트(2바이트) 크기를 차지한다. String은 C나 C++과는 달리 끝에 null 문자('\0')가 포함되지 않는다. 그러므로 7번째 줄의 String값은 영문자 다섯 글자이지만 10바이트를 차지한다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=168>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT COLOR=WHITE><SPAN STYLE="font-size:13pt;"><FONT FACE="바탕">유니코드(16비트-유니코드)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=100%>
<P><FONT FACE="바탕">• 공식적으로는 &quot;세계문자 표준 - 유니코드&quot;라고 불리며, 이 코드체계는 세계 각국의 다양한 언어로 작성된 문자에 대해 상호교환, 처리, 및 표현을 용이하게 하기 위한 시스템이다. 유니코드는 16비트로 표현되며, 현재 유니코드 표준은 24개 언어를 지원하기 위해 34,168개의 개별 코드문자를 담고 있는데, 이 문자는 세계 주요 언어로 작성된 문서를 모두 표현하기에 충분하며, 여러 가지 언어로 작성된 고문서(古文書)까지도 지원할 수 있다. </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.1.4 </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="HY부활M">(array)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">배열은 데이터형이 아닌 객체이기 때문에 C언어와 같이 배열에서 각각의 배열 요소를 포인터로 취급하여 연산할 수 없다. 이는 자바를 더욱 견고하고, 신뢰할 수 있는 코드를 만들 수 있도록 한다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=418 HEIGHT=98>
<TD VALIGN=MIDDLE WIDTH=2%>
<BR>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=97%>
<P><I><FONT FACE="Courier New">type name</FONT></I><FONT FACE="Courier New">[];</FONT>
<P><I><FONT FACE="Courier New">name</FONT></I><FONT FACE="Courier New"> = new </FONT><I><FONT FACE="Courier New">type</FONT></I><FONT FACE="Courier New">[</FONT><I><FONT FACE="Courier New">array_size</FONT></I><FONT FACE="Courier New">];</FONT>
<P>  <FONT FACE="바탕">또는</FONT>
<P><I><FONT FACE="Courier New">type</FONT></I><FONT FACE="Courier New">[]</FONT><I><FONT FACE="Courier New"> name</FONT></I><FONT FACE="Courier New"> = new </FONT><I><FONT FACE="Courier New">type</FONT></I><FONT FACE="Courier New">[</FONT><I><FONT FACE="Courier New">array_size</FONT></I><FONT FACE="Courier New">];</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">자바에서는 배열도 일종의 자료형이기 때문에 대괄호(&quot;[]&quot;)가 배열 이름의 앞에 오는 것이 가능하다. 이후의 배열은 대괄호(&quot;[]&quot;)를 배열 이름 앞에 표기하기로 한다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=418 HEIGHT=80>
<TD VALIGN=MIDDLE WIDTH=2%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=97%>
<P><I><FONT FACE="Courier New">type</FONT></I><B><FONT FACE="Courier New">[]</FONT></B><I><FONT FACE="Courier New"> name</FONT></I><FONT FACE="Courier New">;</FONT>
<P>  <FONT FACE="바탕">또는</FONT>
<P><I><FONT FACE="Courier New">type</FONT></I><B><FONT FACE="Courier New">[]</FONT></B><I><FONT FACE="Courier New"> name</FONT></I><FONT FACE="Courier New"> = new </FONT><I><FONT FACE="Courier New">type</FONT></I><FONT FACE="Courier New">[</FONT><I><FONT FACE="Courier New">array_size</FONT></I><FONT FACE="Courier New">];</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">배열은 기본 데이터형, 객체 참조형, 또는 다른 배열의 순차적인 집합체라고 할 수 있으며, 반드시 한 가지 형으로 지정해야 하며 이는 다른 언어에서도 마찬가지다. 즉 여러 데이터 형을 혼합하여 사용할 수 없다.</FONT>
<BR>
<P><FONT FACE="바탕">배열은 다음과 같이 선언, 생성, 초기화의 과정을 통하여 만들어진다.</FONT>
<BR>
<BR>
<P>  <FONT FACE="바탕">∘ 1 단계 : 선언</FONT>
<BR>
<P>    <FONT FACE="돋움">⋄ 데이터형이나 객체 참조형을 배열 변수를 지정함으로써 배열을 선언한다.</FONT>
<P>      
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=97>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int[] aa;</FONT>		<FONT FACE="Courier New">// int</FONT><FONT FACE="바탕">형으로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">선언</FONT>
<P><FONT FACE="Courier New">int aa[];</FONT>		<FONT FACE="Courier New">// int[] aa; </FONT><FONT FACE="바탕">와</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">같다</FONT><FONT FACE="Courier New">.</FONT>
<P><FONT FACE="Courier New">float[] bb;</FONT>		<FONT FACE="Courier New">// float</FONT><FONT FACE="바탕">형으로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">선언</FONT>
<P><FONT FACE="Courier New">Point[] cc;</FONT>		<FONT FACE="Courier New">// </FONT><FONT FACE="바탕">객체</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">참조형으로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">선언</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>    <FONT FACE="돋움">⋄ 선언시에는 배열의 크기를 명시할 수 없다.</FONT>
<P>      
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=34>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int[6] aa;</FONT>		<FONT FACE="Courier New">// </FONT><FONT FACE="바탕">선언시에</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">크기를</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">지정하면</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">컴파일</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">오류발생</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>  <FONT FACE="바탕">∘ 2 단계 : 생성</FONT>
<BR>
<P>    <FONT FACE="돋움">⋄ 생성은 new 키워드를 이용, 배열의 크기를 명시하여 지정된 크기만큼의 배열을 메모리에 생성시킨다. 배열의 생성과정은 런타임(runtime) 시에 일어난다.</FONT>
<P>      
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int[] aa;</FONT>		<FONT FACE="Courier New">// int</FONT><FONT FACE="바탕">형으로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">선언</FONT>
<P><FONT FACE="Courier New">aa = new int[10];</FONT>	<FONT FACE="Courier New">// </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">변수에</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">크기를</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">명시하여</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">객체</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">생성</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>      <FONT FACE="바탕">위의 배열 aa의 경우 aa[0] ∼ aa[9]까지 모두 10개의 공간을 생성한다.</FONT>
<BR>
<P>    <FONT FACE="돋움">⋄ 배열의 생성 과정은 선언과정과 함께 긴 줄로 지정이 가능하다. 위의 문장은 다음과 같이 표현 할 수 있다.</FONT>
<P>      
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=34>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int[] aa = new int[10];</FONT>	<FONT FACE="Courier New">//</FONT><FONT FACE="바탕">선언과</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">동시</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">선언</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>    <FONT FACE="돋움">⋄ 다차원 배열의 경우 배열을 생성할 때 주의해야 한다.</FONT>
<P>      
<TABLE BORDER=0 CELLPADDING=2 WIDTH=611 HEIGHT=82>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="바탕">올바른</FONT><FONT FACE="HY타자B"> </FONT><FONT FACE="바탕">예</FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int[][] aa;</FONT>		<FONT FACE="Courier New">// int[] </FONT><FONT FACE="바탕">배열형에</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">대한</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">크기가</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">명시되어</FONT><FONT FACE="Courier New"> </FONT>
<P><FONT FACE="Courier New">aa = new int[10][];</FONT>	<FONT FACE="Courier New">// </FONT><FONT FACE="바탕">있으므로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">컴파일이</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">잘</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">된다</FONT><FONT FACE="Courier New">.</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>      
<TABLE BORDER=0 CELLPADDING=2 WIDTH=611 HEIGHT=82>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="바탕">잘못된</FONT><FONT FACE="HY타자B"> </FONT><FONT FACE="바탕">예</FONT><FONT FACE="HY타자B"> - </FONT><FONT FACE="바탕">컴파일</FONT><FONT FACE="HY타자B"> </FONT><FONT FACE="바탕">오류</FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int[][] aa;</FONT>		<FONT FACE="Courier New">// int[10] </FONT><FONT FACE="바탕">배열형에</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">대한</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">크기가</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">명시되어</FONT>
<P><FONT FACE="Courier New">aa = new int[][10];</FONT>	<FONT FACE="Courier New">// </FONT><FONT FACE="바탕">있지</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">않으므로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">인스턴스</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">생성이</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">안</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">된다</FONT><FONT FACE="Courier New">.</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>  <FONT FACE="바탕">∘ 3 단계 : 초기화</FONT>
<BR>
<P>    <FONT FACE="돋움">⋄ 배열의 초기화 과정은 배열의 생성과 동시에 자동으로 일어난다. 다음 표는 각 배열의 초기화 값을 나타내고 있다.</FONT>
<BR>
<P>      
<TABLE BORDER=0 CELLPADDING=2 WIDTH=404 HEIGHT=288>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">배열 변수형</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">초기 값</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">byte</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">short</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">int</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">long</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0L</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">float</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0.0F</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">double</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">0.0D</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">boolean</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">false</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">char</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">'\u0000'</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=48%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">object reference</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=51%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">null</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>    <FONT FACE="돋움">⋄ 사용자가 직접 배열을 초기화시킬 수 도 있다. 사용자가 초기화 작업을 하면 배열의 선언, 생성, 초기화 과정을 한 줄로 지정할 수 있다. 다차원 배열의 경우 같은 단위의 값끼리 중괄호 &quot;{&quot;와 &quot;}&quot;로 묶어주면 된다.</FONT>
<P>      
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=75>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int[] aa = {10, 20, 30, 40, 50}</FONT>	<FONT FACE="Courier New">// 1</FONT><FONT FACE="바탕">차원</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New">(</FONT><FONT FACE="바탕">크기</FONT><FONT FACE="Courier New"> 5)</FONT>
<P><FONT FACE="Courier New">float[][] bb = { {0.5f, 1.3f, 1.8f}, {2.3, 3.6, 5.2} };</FONT>
<P>		<FONT FACE="Courier New">// 2</FONT><FONT FACE="바탕">차원</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New">(2</FONT><FONT FACE="바탕">행</FONT><FONT FACE="Courier New"> 3</FONT><FONT FACE="바탕">열</FONT><FONT FACE="Courier New">)</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음은 배열 사용 예를 나타낸 것이다.</FONT>
<P>  
<TABLE BORDER=0 CELLPADDING=2 WIDTH=756 HEIGHT=430>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">PrimitiveArrayExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class PrimitiveArrayExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<BR>
<P>		<FONT FACE="Courier New">char[] s;</FONT>	<FONT FACE="Courier New">//Primivive</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">선언</FONT>
<P><FONT FACE="Courier New">//</FONT>		<FONT FACE="Courier New">char[5] s2;</FONT>	<FONT FACE="Courier New">//</FONT><FONT FACE="바탕">오류</FONT><FONT FACE="Courier New"> - </FONT><FONT FACE="바탕">선언시</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">크기</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">명시</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">못함</FONT>
<BR>
<P>		<FONT FACE="Courier New">s = new char[5];</FONT>	<FONT FACE="Courier New">//Primivive</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">생성</FONT>
<P>		<FONT FACE="Courier New">s[0] = 'A';</FONT>	<FONT FACE="Courier New">//Primitive</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">생성</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">후</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">바로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">할당</FONT>
<P>		<FONT FACE="Courier New">s[1] = 'B';</FONT>
<P>		<FONT FACE="Courier New">s[2] = 'C';</FONT>
<P>		<FONT FACE="Courier New">s[3] = 'D';</FONT>
<P>		<FONT FACE="Courier New">s[4] = 'E';</FONT>
<BR>
<P>		<FONT FACE="Courier New">for(int i=0; i&lt;s.length; i++) {</FONT>
<P>			<FONT FACE="Courier New">System.out.print(&quot;\t&quot; + s[i]);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV035.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV036.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">A       B       C       D       E</FONT></B>
<BR>
<P><FONT FACE="바탕">다음은 Reference 타입 배열 사용 예를 보이고 있다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=452>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">ReferenceArrayExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT>
<P><FONT FACE="Courier New">19:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class ReferenceArrayExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<BR>
<P>		<FONT FACE="Courier New">java.awt.Point[] p;</FONT>	<FONT FACE="Courier New">//Reference</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">선언</FONT>
<P><FONT FACE="Courier New">//</FONT>		<FONT FACE="Courier New">java.awt.Point[5] p2; //</FONT><FONT FACE="바탕">오류발생</FONT><FONT FACE="Courier New"> - </FONT><FONT FACE="바탕">선언시</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">크기</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">명시</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">못함</FONT>
<BR>
<P>		<FONT FACE="Courier New">p = new java.awt.Point[5];</FONT>	<FONT FACE="Courier New">//Reference</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">생성</FONT>
<P>		<FONT FACE="Courier New">p[0] = new java.awt.Point(0, 1);</FONT>
<P>		<FONT FACE="Courier New">p[1] = new java.awt.Point(7, 6);</FONT>
<P>		<FONT FACE="Courier New">p[2] = new java.awt.Point(9, 6);</FONT>
<P>		<FONT FACE="Courier New">p[3] = new java.awt.Point(0, 8);</FONT>
<P>		<FONT FACE="Courier New">p[4] = new java.awt.Point(2, 3);</FONT>
<P>		<FONT FACE="Courier New">//Reference</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">배열은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">생성</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">후</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">객체를</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">생성하여</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">할당</FONT>
<BR>
<P>		<FONT FACE="Courier New">for(int i=0; i&lt;p.length; i++) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(p[i]);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV037.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV038.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>	
<P>		<B><FONT FACE="Courier New">java.awt.Point[x=0,y=1]</FONT></B>
<P>		<B><FONT FACE="Courier New">java.awt.Point[x=7,y=6]</FONT></B>
<P>		<B><FONT FACE="Courier New">java.awt.Point[x=9,y=6]</FONT></B>
<P>		<B><FONT FACE="Courier New">java.awt.Point[x=0,y=8]</FONT></B>
<P>		<B><FONT FACE="Courier New">java.awt.Point[x=2,y=3]</FONT></B>
<BR>
<P><FONT FACE="바탕">다음은 두 개 이상의 배열이 같은 배열 요소를 참조하고 있는 예를 보인 것이다. 8번째 줄에서는 배열 array2에 array1의 reference를 갖게 한 다음 array2의 0번째 배열 값과 2번째 배열 값을 각각 0과 2로 바꾸었다. 그런 다음 array2를 출력하는 것이 아니고 array1을 다시 출력하였을 때 결과를 보면 array1의 배열 내용도 바뀐 것을 알 수 있다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=541>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">ArrayReferExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT>
<P><FONT FACE="Courier New">19:</FONT>
<P><FONT FACE="Courier New">20:</FONT>
<P><FONT FACE="Courier New">21:</FONT>
<P><FONT FACE="Courier New">22:</FONT>
<P><FONT FACE="Courier New">23:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class ArrayReferExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int[] array1 = { 2, 3, 5, 7, 11, 13, 17, 19 };</FONT>
<P>		<FONT FACE="Courier New">int[] array2;</FONT>
<BR>
<P>		<FONT FACE="Courier New">printArray(array1);</FONT>
<P>		<FONT FACE="Courier New">array2 = array1;</FONT>
<P>		<FONT FACE="Courier New">array2[0] = 0;</FONT>
<P>		<FONT FACE="Courier New">array2[2] = 2;</FONT>
<P>		<FONT FACE="Courier New">printArray(array1);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<BR>
<P>	<FONT FACE="Courier New">public static void printArray(int[] array) {</FONT>
<P>		<FONT FACE="Courier New">System.out.print('&lt;');</FONT>
<P>		<FONT FACE="Courier New">for ( int i=0; i&lt;array.length; i++ ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.print(array[i]);</FONT>
<P>			<FONT FACE="Courier New">if( i+1 &lt; array.length) {</FONT>
<P>				<FONT FACE="Courier New">System.out.print(&quot; , &quot;);</FONT>
<P>			<FONT FACE="Courier New">}</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>		<FONT FACE="Courier New">System.out.println('&gt;');</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV039.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV040.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B>&lt;<FONT FACE="Courier New">2 , 3 , 5 , 7 , 11 , 13 , 17 , 19&gt;</FONT></B>
<P>		<B>&lt;<FONT FACE="Courier New">0 , 3 , 2 , 7 , 11 , 13 , 17 , 19&gt;</FONT></B>
<BR>
<P><FONT FACE="바탕">다음은 배열 요소를 복사하는 예를 나타낸 것이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=276>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">ArrayCopyExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class ArrayCopyExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<BR>
<P>	<FONT FACE="Courier New">int source[] = { 1, 2, 3, 4, 5, 6 };</FONT>
<P>	<FONT FACE="Courier New">int destin[] = { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 };</FONT>
<P>	<FONT FACE="Courier New">System.arraycopy(source, 0, destin, 0, source.length);</FONT>
<BR>
<P>	<FONT FACE="Courier New">for( int i=0; i&lt;destin.length; i++)</FONT>
<P>		<FONT FACE="Courier New">System.out.print(destin[i] + &quot;\t&quot;);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV041.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV042.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">1    2    3    4    5    6    3    2    1    0</FONT></B>
<BR>
<P>  
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=458>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT COLOR=WHITE><SPAN STYLE="font-size:13pt;"><FONT FACE="바탕">배열에서 사용할 수 있는 유용한 내용</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=100%>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• </FONT><FONT FACE="바탕">배열의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">길이를</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">알</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">수</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">있는</FONT><FONT FACE="Courier New"> .length</FONT></SPAN></FONT>
<P><FONT FACE="바탕">배열 이름 뒤에 .length를 붙이면 배열의 크기를 얻을 수 있다. .length()처럼 뒤에 괄호가 붙으면 안된다. 예를 들어 위의 2차원 배열 크기를 알고 싶을 때는 bb.length라고 하면된다. 물론 화면에 그 크기를 출력하려면 다음과 같이한다.</FONT>
<P>	<FONT FACE="바탕">System.out.println(bb.length);</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• </FONT><FONT FACE="바탕">배열값을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">복사하는</FONT><FONT FACE="Courier New"> System.arraycopy()</FONT></SPAN></FONT>
<P><FONT FACE="바탕">배열내용을 복사해 주는 메소드가 System 클래스 내에 static변수로 선언되어 있다. 메소드 선언은 다음과 같다.</FONT>
<P>	<FONT FACE="바탕">arraycopy(Object src, int src_position, </FONT>
<P>		<FONT FACE="바탕">Object dst, int dst_position, int length)</FONT>
<P><FONT FACE="바탕">다음의 예를 보자</FONT>
<P>	<FONT FACE="바탕">int[] source = { 1, 2, 3, 4, 5, 6 };</FONT>
<P>	<FONT FACE="바탕">int[] destin = { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 };</FONT>
<P>	<FONT FACE="바탕">System.arraycopy(source, 0, destin, 3, 4);</FONT>
<P><FONT FACE="바탕">이와 같이하면  source 배열의 0번째 이후 원소 4개를 destin 배열의 3번째 이후 원소에 복사하라는 뜻이다. 이후의 destin 배열값은 { 9, 8, 7, 1, 2, 3, 4, 2, 1, 0 }이 된다.   </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>  
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=376>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT COLOR=WHITE><SPAN STYLE="font-size:13pt;"><FONT FACE="바탕">System.out.println();</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=100%>
<P><FONT FACE="바탕">도스 창에 문자열을 출력하고 줄을 바꾸는 기능을 한다. 나중에 알겠지만 여기에서 System은 클래스 이름이고, out은 변수 이름, 그리고 println은 메소드 이름을 나타낸다. println() 메소드는 PrintStream 클래스에 선언되어 있는 메소드로서 System 클래스의 out 변수타입이다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• </FONT><FONT FACE="바탕">특정문자열을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">출력하려면</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">출력할</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">문자열을</FONT><FONT FACE="Courier New"> &quot; &quot;</FONT><FONT FACE="바탕">로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">감싸준다</FONT><FONT FACE="Courier New">. </FONT></SPAN></FONT>
<P>	<FONT FACE="바탕">System.out.println(&quot;Hello. Java&quot;);</FONT>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• </FONT><FONT FACE="바탕">변수값을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">출력하려면</FONT><FONT FACE="Courier New"> &quot; &quot;</FONT><FONT FACE="바탕">로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">감싸지</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">않고</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">변수로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">표기해준다</FONT><FONT FACE="Courier New">.</FONT></SPAN></FONT>
<P>	<FONT FACE="바탕">int x = 10;</FONT>
<P>	<FONT FACE="바탕">System.out.println(x);</FONT>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• </FONT><FONT FACE="바탕">특정</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">문자열과</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">변수값을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">동시에</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">출력하려면</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">둘</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">사이를</FONT><FONT FACE="Courier New"> +(plus)</FONT><FONT FACE="바탕">로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">연결해준다</FONT><FONT FACE="Courier New">. </FONT></SPAN></FONT>
<P>	<FONT FACE="바탕">int x = 10;</FONT>
<P>	<FONT FACE="바탕">System.out.println(&quot;x의 값은 : &quot; + x + &quot;입니다&quot;);</FONT>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• </FONT><FONT FACE="바탕">도스</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">창으로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">문자열을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">출력하고</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">줄을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">바꾸는</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">기능을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">하지</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">않으려면</FONT><FONT FACE="Courier New"> System.out.print()</FONT><FONT FACE="바탕">를</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">이용한다</FONT><FONT FACE="Courier New">. </FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.1.5 </FONT><FONT FACE="바탕">변수와</FONT><FONT FACE="HY부활M"> </FONT><FONT FACE="바탕">초기화</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">프로그램을 작성할 때 가장 많이 사용하는 것이 변수일 것이다. 자바에는 3가지 범위의 변수가 있는데, 변수가 있는 위치에 따라서 지역변수(Local variable)와 멤버변수(Member variable), 그리고 선언되는 형식에 의한 전역변수(Global variable)로 나눌 수 있다.</FONT>
<BR>
<P>  <FONT FACE="바탕">∘ 지역변수</FONT>
<P>    <FONT FACE="돋움">지역변수는 메소드 안에 선언된 변수를 말하며 사용자가 직접 초기화를 해주어야 한다. 지역변수를 선언하고 초기화를 하지 않으면 오류가 발생한다. 지역변수는 local 대신에 automatic, temporary 또는 stack이라고도 부른다.</FONT>
<BR>
<P><FONT FACE="바탕">지역변수의 생성 시점은 해당 메소드가 수행 될 때이며, 메소드 수행이 끝나면 변수는 메모리에서 없어진다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=165>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">LocalVariableExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class LocalVariableExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int a;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(a); //Error</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">4:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">System.out.println(a);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">2번째 줄에서 선언만 하고 초기화를 하지 않았으므로 컴파일시에 오류가 발생한다. 지역변수를 선언과 동시에 초기화 할 필요는 없으나 사용하기 전에는 반드시 초기화를 해 주어야 한다.</FONT>
<BR>
<P>  <FONT FACE="바탕">∘ 멤버변수</FONT>
<P>    <FONT FACE="돋움">멤버변수는 클래스 안에 선언된 변수를 말하며, 사용자가 초기화시키지 않아도 시스템에 의해서 자동으로 초기화된다. 하지만 프로그램의 정확성을 위해 직접 초기화하는 습관이 필요하다. 멤버변수가 자동으로 초기화될 때 초기값은 배열에서의 예와 같다. 멤버변수를 참조하기 위해 static으로 선언되어있지 않을 경우에는 객체를 생성한 후 참조해야 한다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=214>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">MemberVariableExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class MemberVariableExample {</FONT>
<P>	<FONT FACE="Courier New">int a;</FONT>
<P>	<FONT FACE="Courier New">static int b;</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">System.out.println(a); //Error</FONT>
<P>		<FONT FACE="Courier New">System.out.println(b);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">2:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>	<FONT FACE="Courier New">int a;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">멤버변수는 초기값을 지정하지 않아도 자동으로 초기화된다. 일반 멤버변수의 경우 클래스의 생성자가 실행되기 직전에 초기화가 이루어진다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>	<FONT FACE="Courier New">static int b;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">멤버변수 중에서 static은 객체가 동일 데이터 공간을 참조하여 공유변수가 된다. 따라서, 변수나 메소드를 static으로 선언하면 객체를 생성하지 않고도 접근이 가능하다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=48>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">System.out.println(a); //Error</FONT>
<P>		<FONT FACE="Courier New">System.out.println(b);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">5 : 오류가 발생하는데, 멤버변수의 경우 static으로 선언하지 않고 static으로 선언된 메소드 안에서 참조할 때는 반드시 객체를 생성한 후 참조해야한다. 
</FONT><P><FONT FACE="바탕">6 : 3번째 줄에서 선언된 변수 b가 static으로 선언되었기 때문에 바로 참조할 수 있다. 2번째 줄 2에서 선언된 변수 a를 참조하기 위해 5번째 줄을 다음과 같이 객체를 생성한 후 사용하여야 한다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=70>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">5:</FONT>
<BR></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">MemberVariableExample me;</FONT>
<P>		<FONT FACE="Courier New">me = new MemberVariableExample();</FONT>
<P>		<FONT FACE="Courier New">System.out.println(me.b);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<BR>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV043.GIF" BORDER=0 ALIGN=LEFT>
<P> <FONT SIZE=5 COLOR=PURPLE><SPAN STYLE="font-size:20pt;"><B><FONT FACE="Bookman Old Style">2.2   </FONT><FONT FACE="바탕">연산자</FONT></B></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">연산자는 변수의 값을 변경하거나 대입하는데 사용된다. 일반적인 연산과는 달리 연산자에 따라 연산 대상이 될 수 있는 데이터형이 정해져 있다. 예를 들면, 조건 연산자의 경우 논리형만을 사용할 수 있고, 비트 연산자인 경우에는 정수형만 사용할 수 있다.</FONT>
<P><FONT FACE="바탕">범위를 벗어나는 연산 즉, 오버플로(overflow) 또는 언더플로(underflow)에 대해서는 오류가 나지 않고, 단지 연산 결과에 불필요한 값이 저장된다. 예를 들어 바이트형인 경우 127에 1을 더하면 128이 아니고 -127이 된다. 연산에서 오류가 발생하는 경우는 나눗셈이나 나머지 연산의 경우 분모가 0(Zero)이 될 때이다. 
</FONT><P><FONT FACE="바탕">다음은 자바에서 사용하는 연산자와 이들의 우선 순위를 나타낸 것이다. 우선 순위란 두개 이상의 연산이 결합된 복합연산의 경우 실행순서를 말하는 것으로, 다음 표에서는 위의 것일수록 우선 순위가 높은 것을 나타낸다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=624 HEIGHT=559>
<TD VALIGN=MIDDLE WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">우선 순위</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">연산자</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">연산자 설명</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE ROWSPAN=10 WIDTH=13%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">높음▅</FONT></SPAN></FONT>
<BR>
<BR>
<BR>
<BR>
<BR>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">우</FONT></SPAN></FONT>
<BR>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">선</FONT></SPAN></FONT>
<BR>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">순</FONT></SPAN></FONT>
<BR>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">위</FONT></SPAN></FONT>
<BR>
<BR>
<BR>
<BR>
<BR>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">낮음▇</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">( )  [ ]</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">.</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">괄호</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">소수점/참조 연산자</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">++, --</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">+, -</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">!</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">~</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(type)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">증/감 연산자(증가, 감소)</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">부호</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">논리 연산자(반전)</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">비트 연산자(반전)</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">형 변환</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">*, /, %</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">산술 연산자(곱셈, 나눗셈, 나머지)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">+, -</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">산술 연산자(덧셈, 뺄셈)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&lt;&lt;<FONT FACE="바탕">, &gt;&gt;, &gt;&gt;&gt;</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">비트 이동 연산자</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(좌, 우, 우(부호 포함))</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&lt;<FONT FACE="바탕">, &lt;=, &gt;, &gt;=</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">==, !=</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">instanceof</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">비교 연산자(대/소 비교)</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">비교 연산자(동/이 비교)</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">type 연산자(객체 형 비교)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&amp;<FONT FACE="바탕">, |, ^</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">비트 연산자(AND, OR, XOR)</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">논리 연산자(AND, OR, XOR)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&amp;&amp;<FONT FACE="바탕">, ||</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">논리 연산자(Short Circuit)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">?:</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">논리연산자(3항 연산자)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=39%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">=</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">+=, -+, *=, /=, %=</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&lt;&lt;<FONT FACE="바탕">=, &gt;&gt;=, &gt;&gt;&gt;=</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&amp;<FONT FACE="바탕">=, ^=, |=</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=47%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">대입 연산자</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">연산 후 대입 연산자</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">연산 후 대입 연산자</FONT></SPAN></FONT>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">연산 후 대입 연산자</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.2.1 </FONT><FONT FACE="바탕">단항연산자</FONT><FONT FACE="HY부활M">(Unary operator)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">단항연산자는 피 연산자가 하나인 연산자를 말한다. 단항연산자는 변수의 앞이나 뒤에 붙어서 변수 값을 하나 증가시키거나 감소시킬 때 사용하는 증가/감소 연산자와 양수와 음수를 나타내는 부호 연산자, 비트의 값을 바꾸어주는 비트 반전 연산자, 논리 대수의 값을 반전시켜주는 논리 반전 연산자, 그리고 형을 바꾸어주는 캐스트 연산자가 있다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.1.1 </FONT><FONT FACE="바탕">증가</FONT><FONT FACE="HY울릉도M">/</FONT><FONT FACE="바탕">감소</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M">(Increment and Decrement operaotor) : ++, --</FONT></SPAN></FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">++</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">증가 연산자(값 1 증가)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">--</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">감소 연산자(값 1 감소)</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">이 연산자는 변수의 앞이나 뒤에 붙어서 사용되는데, 연산자가 변수의 앞에 붙을 때는 변수 값이 증가 또는 감소 후 사용되고, 연산자가 변수의 뒤에 붙을 때에는 변수의 값이 사용된 후에 변수의 값이 증가 또는 감소한다.</FONT>
<BR>
<P><FONT FACE="바탕">다음 프로그램은 증가/감소 연산자의 사용 예를 나타낸 것이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=364>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">UnaryOperator.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class UnaryOperator {</FONT>
<P>	<FONT FACE="Courier New">public static void main (String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int i=1, j=0;</FONT>
<P>		<FONT FACE="Courier New">j = i++;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">후위</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="Courier New">&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;i</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> &quot; + i);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;j</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> &quot; + j);</FONT>
<BR>
<P>		<FONT FACE="Courier New">int x=1, y=0;</FONT>
<P>		<FONT FACE="Courier New">y = ++x;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;\n</FONT><FONT FACE="바탕">전위</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="Courier New">&quot;);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;x</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> &quot; + x);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;y</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> &quot; + y);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV044.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV045.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="바탕">후위</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">연산자</FONT></B>
<P>		<B><FONT FACE="Courier New">i</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> 2</FONT></B>
<P>		<B><FONT FACE="Courier New">j</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> 1</FONT></B>
<P>		<B><FONT FACE="바탕">전위</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">연산자</FONT></B>
<P>		<B><FONT FACE="Courier New">x</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> 2</FONT></B>
<P>		<B><FONT FACE="Courier New">y</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> 2</FONT></B>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=53>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">int i=1, j=0;</FONT>
<P>		<FONT FACE="Courier New">j = i++;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">증가/감소 연산자가 변수의 뒤에 왔으므로 변수 j에는 변수 i의 처음 값인 1이 입력된다. 그 후 i값이 증가하여 i값은 2가 된다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=53>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">int x=1, y=0;</FONT>
<P>		<FONT FACE="Courier New">y = ++x;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">증가/감소 연산자가 변수의 앞에 온 경우이다. 이 경우에는 변수 y에 값이 대입 되기 전에 x 값이 증가된다. 그러므로 x 값이 증가되어 2가 되고, 그 증가된 값이 대입 되므로 y는 2가 된다.</FONT>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.1.2 </FONT><FONT FACE="바탕">부호</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M"> : +, -</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">이 연산자는 피 연산자의 앞에 위치하여 양수인지 음수인지를 지정한다. +를 생략하면 기본 지정은 양수이다. 2항 연산자의 산술 연산을 하는 +, -와는 다르다.  
</FONT><BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">+</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">양수 표현</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">-</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">음수 표현</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.1.3 </FONT><FONT FACE="바탕">비트</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">반전</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">과</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">논리</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">반전</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M"> : ~, !</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">먼저 비트 연산자인 ~는 피연산자의 앞에 사용되어 피연산자를 2진수로 바꾼 다음 2진수의 각 비트를 0은 1로, 1은 0으로 모두 반전시킨다. 그리고 !는 논리 대수를 반전시킨다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">~</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">2진수의 각 비트(0, 1)을 반전</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">!</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">논리 값(true, false)을 반전</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.1.4 </FONT><FONT FACE="바탕">캐스트</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M"> : (type)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">캐스트 연산자는 괄호안에 바꾸고자 하는 데이터형을 지정함으로써 해당 데이터의 형으로 변환시키는 연산을 수행한다. 형변환을 수행하기 위해서는 변수나 값 앞에 새로운 자료형을 다음과 같이 지정한다. 
</FONT><BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=26>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">(type)</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">데이터형을 강제로 바꿈</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=214>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">CastOperator1.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class CastOperator1 {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">byte a = 100;</FONT>
<P>		<FONT FACE="Courier New">int  b = a; //Promotion</FONT>
<BR>
<P>		<FONT FACE="Courier New">byte c = </FONT><B><FONT FACE="Courier New">(byte)</FONT></B><FONT FACE="Courier New">b; //Type Casting</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">크기가 작은 데이터형을 크기가 큰 데이터형으로 변환할 때는 캐스트 연산자를 지정하지 않아도 컴파일러에 의해 자동으로 수행(묵시적 형 변환 : Promotion)이 가능하지만, 크기가 큰 데이터형을 크기가 작은 데이터형으로 변환할 때에는 반드시 캐스트 연산자를 사용하여 변환될 데이터형을 명시(명시적 형 변환 : Type Casting)해야 한다. 그렇지 않으면 컴파일시 오류가 발생한다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=276>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">CastOperator2.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class CastOperator2 {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int  a = 1522;</FONT>
<P>		<FONT FACE="Courier New">byte b = (byte)a; //Type Casting</FONT>
<P>		<FONT FACE="Courier New">System.out.println( b ); //-14 </FONT><FONT FACE="바탕">출력됨</FONT>
<BR>
<P>		<FONT FACE="Courier New">double d = 3.6;</FONT>
<P>		<FONT FACE="Courier New">a = (int)d;</FONT>
<P>		<FONT FACE="Courier New">System.out.println( a ); //3 </FONT><FONT FACE="바탕">출력됨</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV046.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV047.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">-14</FONT></B>
<P>		<B><FONT FACE="Courier New">3</FONT></B>
<BR>
<P><FONT FACE="바탕">형 변환시 크기가 작은 자료형에서 큰 자료형으로 변환할 때는 값이 손실되지 않지만, 크기자 작은 자료형에서 큰 자료형으로 변환할 때는 윗 부분(high order bit)이 잘려나가 값이 손실된다. 예를 들어 int값 5를 byte형으로 형 변환할 때 값의 손실이 발행하지 않지만, 256을 byte형으로 형 변환하면 범위를 벗어나므로 엉뚱한 값이 저장된다. 또 정수 자료형은 실수 자료형으로 형 변환이 가능하지만, 부동 소수점을 정수로 변환할 때는 소수점 첫째 자리에서 버림을 한다. 즉 1.5를 정수로 변환하면 1이 되고, -1.5를 정수로 변환하면 -1이 된다.</FONT>
<P>  
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=336>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT COLOR=WHITE><SPAN STYLE="font-size:13pt;"><FONT FACE="바탕">High order bit</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=100%>
<P><FONT FACE="바탕">2진수를 표현했을 때 왼쪽 부분을 상위 비트(high order bit), 오른쪽 부분을 하위 비트(low order bit)라 한다. 정수 5와 256을 byte형으로 형 변환하였을 경우</FONT>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• 5</FONT><FONT FACE="바탕">를</FONT><FONT FACE="Courier New"> int</FONT><FONT FACE="바탕">형으로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">표현하면</FONT></SPAN></FONT>
<P>	<FONT FACE="바탕">00000000 00000000 00000000 00000101 이 된다</FONT>
<P><FONT FACE="바탕">여기서 byte형으로 형 변환하면 왼쪽 상위 비트 중 24비트가 잘려 나가는데, 이 경우 byte형으로 변환한 후에도 </FONT>
<P>	<FONT FACE="바탕">00000101 이 되어서 그대로 5의 값을 갖게 된다.</FONT>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• 256</FONT><FONT FACE="바탕">을</FONT><FONT FACE="Courier New"> int</FONT><FONT FACE="바탕">형으로</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">표현하면</FONT></SPAN></FONT>
<P>	<FONT FACE="바탕">00000000 00000000 00000001 00000000 이 된다</FONT>
<P><FONT FACE="바탕">여기서 byte형으로 형 변환하면 왼쪽 상위 비트 중 24비트가 잘려 나가게 되는데, byte형으로 변환한 후에는 </FONT>
<P>	<FONT FACE="바탕">00000000 이 되어서 전혀 다른 0의 값을 갖게 된다.</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.2 2</FONT><FONT FACE="바탕">항</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M">(Binary operator)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">2항 연산자는 피 연산자(operand)가 두 개인 연산자를 말한다. 연산자가 int형(4바이트) 보다 작은 크기의 데이터형일 경우 boolean형을 제외하고는 모두 int형으로 변환되어 연산을 수행한다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.2.1 </FONT><FONT FACE="바탕">산술</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M">(Arithmetic operator) : +, -, *, /, %</FONT></SPAN></FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=132>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">+</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">덧셈</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">-</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">뺄셈</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">*</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">곱셈</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">/</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">나눗셈</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">%</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">나머지 연산(결과는 항상 정수)</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">덧셈, 뺄셈, 곱셈, 나눗셈은 수학에서의 연산과 동일하고, 나머지 연산자는 피젯수를 젯수로 나눈 나머지 값을 구하는 연산이다. 나머지 연산의 실제 계산은 피젯수에서 젯수를 계속 빼서 피젯수의 값이 젯수의 값보다 작아질 때의 피젯수의 값이 최종적으로 나머지 연산의 값이 된다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int a = 7;</FONT>
<P><FONT FACE="Courier New">int b = a % 3;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">7을 3으로 나눈 나머지 값인 1이 된다.</FONT>
<BR>
<P><FONT FACE="바탕">원칙적으로 연산자 중복은 허용되지 않지만 +연산의 경우는 예외라고 할 수 있다. 덧셈 연산에서 String 객체의 경우 문자열을 연결하는 집합 연산자로 사용되는데, 이때 연산의 방향은 왼쪽에서 오른쪽으로 진행된다. 예를 들면 다음과 같다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=298>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">OperatorOverloading.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class OperatorOverloading {</FONT>
<P>	<FONT FACE="Courier New">public static void main (String[] args) {</FONT>
<P>		<FONT FACE="Courier New">String s1 = &quot;Sun&quot;;</FONT>
<P>		<FONT FACE="Courier New">String s2 = &quot;day&quot;;</FONT>
<P>		<FONT FACE="Courier New">int a = 20;</FONT>
<P>		<FONT FACE="Courier New">int b = 30;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(s1 + s2);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(s1 + a);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(a + b + s1 + s2);</FONT>
<P>		<FONT FACE="Courier New">System.out.println(s1 + s2 + a + b);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV048.GIF" BORDER=0 ALIGN=LEFT><B><FONT FACE="바탕">실행</FONT></B>
<IMG SRC="file:///C|/지빠귀/FYXIV049.GIF" BORDER=0 ALIGN=LEFT><B><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">Sunday</FONT></B>
<P>		<B><FONT FACE="Courier New">Sun20</FONT></B>
<P>		<B><FONT FACE="Courier New">50Sunday</FONT></B>
<P>		<B><FONT FACE="Courier New">Sunday2030</FONT></B>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">7:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">System.out.println(s1 + s2);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">s1의 문자열인 &quot;Sun&quot;과 s2의 문자열인 &quot;day&quot;를 연결하여 출력한다. 
</FONT><BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">8:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">System.out.println(s1 + a);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">문자열과 숫자를 + 연산하려고 한다. 문자열과 숫자의 +연산이 있을 경우 숫자가 문자열로 변하게 된다. 그러므로 a의 값 20은 숫자가 아닌 문자 20이 되고 출력 결과는 Sun20이 출력된다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">9:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">System.out.println(a + b + s1 + s2);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">결과가 50Sunday라고 출력되는데, 이유는 같은 우선 순위를 가진 연산자가 있을 때는 연산순서가 왼쪽에서 오른쪽으로 진행되기 때문에 먼저 정수 a 값 20과 b 값 30이 먼저 계산되어 50이 되고, 그 다음 문자열과 더해진다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">10:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">System.out.println(s1 + s2 + a + b);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">9번째 줄과는 반대로 문자열이 먼저 더해지므로 결과는 Sunday2030이 된다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.2.2 </FONT><FONT FACE="바탕">비교</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M">(Comparison operator) : &lt;, &lt;=, &gt;, &gt;=, ==, !=</FONT></SPAN></FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=525 HEIGHT=186>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a &lt; b</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">b가 a보다 크면 true</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a &lt;= b</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">b가 a보다 크거나 같으면 true</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a &gt; b</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a가 b보다 크면 true</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a &gt;= b</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a가 b보다 크거나 같으면 true</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a == b</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a와 b가 같으면 true(조건문에서 유용)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a != b</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">a와 b가 같지 않으면 true</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=24%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">instanceof</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=75%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">왼쪽이 오른쪽 클래스의 인스턴스일 경우 true</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">비교 연산자의 결과 값은 크기 값을 비교하여 조건을 만족하면 true를, 맞지 않으면 false를 반환한다. 만약 비교되는 숫자의 자료형이 다를 경우 기본적으로 크기가 큰 자료형에 맞추어 비교 연산을 수행한다.</FONT>
<P><FONT FACE="바탕">동등(equality) 연산자 '=='와 비동등(inequality) 연산자 '=='는 객체 참조 즉, 주소 값이 같은 지의 여부를 판단하여 true와 false를 반환한다. 객체 참조가 아닌 실제 값을 비교 판단하기 위해서는 equals 메소드를 이용해야 한다.</FONT>
<P><FONT FACE="바탕">instanceof 연산자의 경우 런타임 시에 연산자의 왼쪽 항의 객체가 오른쪽 항 클래스의 인스턴스이면 true를 반환하고, 그렇지 않으면 false를 반환한다. 이 연산자를 이해하려면 클래스 개념이 있어야 하므로 여기서는 종류만을 이해하고 3장에서 자세히 설명하기로 한다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.2.3 </FONT><FONT FACE="바탕">비트</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M">(Bit operator) : &amp;, |, ^</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">비트 연산자는 두 수를 각각 2진수로 변환하여 두 수의 각 비트를 AND, OR, XOR 연산을 수행한다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=361 HEIGHT=79>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&amp;</SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">AND</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">|</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">OR</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">^</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">XOR</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">비트 연산자는 특정 비트를 0또는 1로 바꾸기 위한 마스크비트로 많이 사용된다. 
</FONT><BR>
<P><FONT FACE="바탕">다음은 비트 연산자 예를 보인 것이다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=231>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">BitOperator.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class BitOperator {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">byte a = 5; //00000101</FONT>
<P>		<FONT FACE="Courier New">byte b = 3; //00000011</FONT>
<P>		<FONT FACE="Courier New">System.out.println( a &amp; b ); //00000001</FONT>
<P>		<FONT FACE="Courier New">System.out.println( a | b ); //00000111</FONT>
<P>		<FONT FACE="Courier New">System.out.println( a ^ b ); //00000110</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV050.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV051.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">1</FONT></B>
<P>		<B><FONT FACE="Courier New">7</FONT></B>
<P>		<B><FONT FACE="Courier New">6</FONT></B>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.2.4 </FONT><FONT FACE="바탕">비트</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">이동연산자</FONT><FONT FACE="HY울릉도M">(Bit shift operator) : &lt;&lt;, &gt;&gt;, &gt;&gt;&gt;</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">비트 이동 연산자는 피젯수를 2진수로 변환하여 젯수만큼 비트를 좌, 우로 이동시키는 연산을 수행한다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=361 HEIGHT=79>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&lt;&lt;</SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">왼쪽으로 비트 이동</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&gt;&gt;</SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">오른쪽으로 비트 이동</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&gt;&gt;&gt;</SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">오른쪽으로 비트 이동(비부호형)</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P>'&lt;&lt;'<FONT FACE="바탕">는 2진수의 비트를 좌측으로 젯수의 수만큼 이동시키고, 오른쪽의 최하위 비트(LSB)에 0을 채운다. 이때 부호 비트는 변화가 없다. 이는 실제로 
</FONT><TABLE BORDER=0 CELLPADDING=2 WIDTH=46 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">2^피젯수  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE><FONT FACE="바탕">만큼 곱한 결과를 나타낸다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int a = 192;</FONT>
<P><FONT FACE="Courier New">int b = a &lt;&lt; 3;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">192를 2진수로 변환하면 00000000 00000000 00000000 11000000이 된다. 이 수를 왼쪽으로 3비트 이동시키면 00000000 00000000 00000110 00000000이 되어 192에 
</FONT><TABLE BORDER=0 CELLPADDING=2 WIDTH=19 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">2^3  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE><FONT FACE="바탕">를 곱한 1536이 된다.</FONT>
<BR>
<P>'&gt;&gt;'<FONT FACE="바탕">는 2진수 비트를 오른쪽으로 젯수의 수만큼 이동시키고, 부호 비트에는 변화를 주지 않으며, 왼쪽의 최상위 비트(MSB)에 부호 비트의 수가 채워진다. 이는 실제로 
</FONT><TABLE BORDER=0 CELLPADDING=2 WIDTH=46 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">2^피젯수  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE><FONT FACE="바탕">만큼 나눈 결과를 나타낸다.</FONT>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=611 HEIGHT=53>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT FACE="Courier New">int a = 192;</FONT>
<P><FONT FACE="Courier New">int b = a &gt;&gt; 3;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">192를 2진수로 변환하면 00000000 00000000 00000000 11000000이 된다. 이 수를 오른쪽으로 3비트 이동시키면 00000000 00000000 00000000 00011000이 되어 192를 
</FONT><TABLE BORDER=0 CELLPADDING=2 WIDTH=19 HEIGHT=22>
<TD VALIGN=BOTTOM WIDTH=100%>
<P><FONT FACE="바탕">2^3  </FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE><FONT FACE="바탕">으로 나눈 24가 된다.</FONT>
<BR>
<P>'&gt;&gt;&gt;'<FONT FACE="바탕">는 부호 없는 이동 연산자로고도 불리며, '&gt;&gt;'연산과 같지만, 최상위(MSB)비트에 부호 비트의 수가 채워지는 것이 아니고 무조건 0이 채워진다. 양수인 경우 나눗셈의 결과를 가져오지만 뺄셈의 경우는 전혀 다른 양수가 된다.</FONT>
<BR>
<P><FONT FACE="바탕">비트 이동 연산자는 오른쪽 항 즉 젯수에서 단축이 일어난다. 단축이란 비트 이동 연산자의 젯수 값이 자료형의 크기 이상일 때 젯수의 숫자를 자료형의 크기로 나눈 나머지를 젯수로 한다는 뜻이다. 예를 들면 int형의 경우 젯수의 수가 33이면 33비트만큼 이동하는 게 아니고 33을 32로 나눈 나머지인 1만큼 이동한다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 쉬프트 연산자 예를 보이고 있다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=195>
<TD VALIGN=MIDDLE WIDTH=8%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=91%>
<P><FONT FACE="HY타자B">ShiftOperator.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=8%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT></TD>
<TD VALIGN=TOP WIDTH=91%>
<P><FONT FACE="Courier New">public class ShiftOperator {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int a = 192;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;a(192)\t&quot; + toBinaryString(a));</FONT>
<P>		
<P>		<FONT FACE="Courier New">int b = a &lt;&lt; 3;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;a&lt;&lt;3\t&quot; + toBinaryString(b));</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=430>
<TD VALIGN=MIDDLE WIDTH=8%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=91%>
<P><FONT FACE="HY타자B">ShiftOperator.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=8%>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT>
<P><FONT FACE="Courier New">19:</FONT>
<P><FONT FACE="Courier New">20:</FONT>
<P><FONT FACE="Courier New">21:</FONT>
<P><FONT FACE="Courier New">22:</FONT>
<P><FONT FACE="Courier New">23:</FONT>
<P><FONT FACE="Courier New">24:</FONT>
<P><FONT FACE="Courier New">25:</FONT></TD>
<TD VALIGN=TOP WIDTH=91%>
<BR>
<P>		<FONT FACE="Courier New">int c = a &gt;&gt; 3;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;a&lt;&lt;3\t&quot; + toBinaryString(c));</FONT>
<BR>
<P>		<FONT FACE="Courier New">a = -192;</FONT>
<P>		<FONT FACE="Courier New">c = a &gt;&gt;&gt; 3;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;a(-192)\t&quot; + toBinaryString(a));</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;a&gt;&gt;&gt;3\t&quot; + toBinaryString(c));</FONT>
<BR>
<P>		<FONT FACE="Courier New">c = a &gt;&gt;&gt; 35;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;a&gt;&gt;&gt;35\t&quot; + toBinaryString(c));</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<BR>
<P>	<FONT FACE="Courier New">private static String toBinaryString(int num) {</FONT>
<P>		<FONT FACE="Courier New">String s = Long.toBinaryString( num | 0xFFFFFFFF00000000L );</FONT>
<P>		<FONT FACE="Courier New">return s.substring(32);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV052.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV053.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">a(192)  00000000000000000000000011000000</FONT></B>
<P>		<B><FONT FACE="Courier New">a&lt;&lt;3    00000000000000000000011000000000</FONT></B>
<P>		<B><FONT FACE="Courier New">a&lt;&lt;3    00000000000000000000000000011000</FONT></B>
<P>		<B><FONT FACE="Courier New">a(-192) 11111111111111111111111101000000</FONT></B>
<P>		<B><FONT FACE="Courier New">a&gt;&gt;&gt;3   00011111111111111111111111101000</FONT></B>
<P>		<B><FONT FACE="Courier New">a&gt;&gt;&gt;35  00011111111111111111111111101000</FONT></B>
<BR>
<P><FONT FACE="바탕">이 예에서 10진수를 2진수로 출력하기 위해 Integer클래스의 toBinaryString() 메소드를 직접 사용할 수 있으나 그럴 경우에는 2진수의 앞부분 0이 출력되지 않으므로 임의로 toBinaryString() 메소드를 만든 것이다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.2.5 </FONT><FONT FACE="바탕">논리</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M">(Logical operator) : &amp;, ^, |, &amp;&amp;, ||</FONT></SPAN></FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=361 HEIGHT=132>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&amp;</SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">AND</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">|</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">OR</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">^</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">XOR</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;">&amp;&amp;</SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">AND(short circuit)</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=MIDDLE WIDTH=23%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">||</FONT></SPAN></FONT></TD>
<TD VALIGN=MIDDLE WIDTH=76%>
<P ALIGN=CENTER><FONT SIZE=2><SPAN STYLE="font-size:10pt;"><FONT FACE="바탕">OR(short circuit)</FONT></SPAN></FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>&amp;<FONT FACE="바탕">, |, ^는 비트 연산자로 사용되지만 true와 false를 통해 논리 연산을 수행하는 논리 연산자로도 사용되며 &amp;, |, ^ 연산자의 경우는 양쪽 항 모두 수행하지만 &amp;&amp;, || 연산자는 short circuit operator라고 하여 오른쪽 항을 수행하지 않을 수 도 있다.</FONT>
<P>'&amp;&amp;'<FONT FACE="바탕"> 연산자는 AND연산을 수행하여 양쪽 항이 모두 true일 때만 true를 반환한다. 만일 왼쪽이 false일 때는 오른쪽을 수행하지 않고 무조건 false를 반환한다.</FONT>
<P>'<FONT FACE="바탕">||' 연산자는 OR연산을 수행하여 양쪽 중 한쪽만 만족해도 true를 반환한다. 만일 왼쪽이 true이면 오른쪽을 수행하지 않고 무조건 true를 반환해도 결과는 같다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 논리 연산자 중에서 &amp;, | 연산자와 &amp;&amp;, ||연산자의 차이점을 예를 든 것인데, y 값은 증가해도 b 값은 증가하지 않는다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=435>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">LogicalOperator.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class LogicalOperator {</FONT>
<P>	<FONT FACE="Courier New">public static void main (String[] args) {</FONT>
<BR>
<P>		<FONT FACE="Courier New">int x=10, y=20;</FONT>
<P>		<FONT FACE="Courier New">if ((x != 10) </FONT><B>&amp;</B><FONT FACE="Courier New"> (++y == 21))</FONT>
<P>			<FONT FACE="Courier New">System.out.println(x + &quot; &quot; + y);</FONT>
<BR>
<P>		<FONT FACE="Courier New">if ((x == 10) </FONT><B><FONT FACE="Courier New">|</FONT></B><FONT FACE="Courier New"> (++y == 21))</FONT>
<P>			<FONT FACE="Courier New">System.out.println(x + &quot; &quot; + y);</FONT>
<BR>
<P>		<FONT FACE="Courier New">int a=10, b=20;</FONT>
<P>		<FONT FACE="Courier New">if ((a != 10) </FONT><B>&amp;&amp;</B><FONT FACE="Courier New"> (++b == 21))</FONT>
<P>			<FONT FACE="Courier New">System.out.println(a + &quot; &quot; + b);</FONT>
<BR>
<P>		<FONT FACE="Courier New">if ((a == 10) </FONT><B><FONT FACE="Courier New">||</FONT></B><FONT FACE="Courier New"> (++a == 21))</FONT>
<P>			<FONT FACE="Courier New">System.out.println(a + &quot; &quot; + b);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV054.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV055.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">10 22</FONT></B>
<P>		<B><FONT FACE="Courier New">10 20</FONT></B>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.3 3</FONT><FONT FACE="바탕">항</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M">(Ternary operator)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">피 연산자가 세 개인 연산자를 말하며, 조건 연산자인 ?: 가 있다.</FONT>
<BR>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.2.3.1 </FONT><FONT FACE="바탕">조건</FONT><FONT FACE="HY울릉도M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY울릉도M">(Conditional operator) : ? :</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">조건 연산자 사용법은 다음과 같다.</FONT>
<P>	<FONT FACE="바탕">a = x ? b : c;</FONT>
<P><FONT FACE="바탕">x는 boolean형 조건 연산식으로 연산을 수행하여 x의 결과가 true이면 변수 a에 b 값이 대입되고, x의 결과가 false이면 a에 c 값이 대입된다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 조건 연산자를 이용하여 절대값을 구하는 식으로 실행시에 인자를 필요로 한다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=214>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">ConditionalOperator.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class ConditionalOperator {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int a = Integer.parseInt(args[0]);</FONT>
<BR>
<P>		<FONT FACE="Courier New">int abs = (a &gt;= 0) </FONT><B><FONT FACE="Courier New">?</FONT></B><FONT FACE="Courier New"> a </FONT><B><FONT FACE="Courier New">:</FONT></B><FONT FACE="Courier New"> -a;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(a + &quot;</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">절대값은</FONT><FONT FACE="Courier New"> : &quot; + abs);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV056.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV057.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT><FONT FACE="Courier New">    (</FONT><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> : java ConditionalOperator -64)</FONT></B>
<P>		<B><FONT FACE="Courier New">-64</FONT><FONT FACE="바탕">의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">절대값은</FONT><FONT FACE="Courier New"> : 64</FONT></B>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.2.4 </FONT><FONT FACE="바탕">대입</FONT><FONT FACE="HY부활M"> </FONT><FONT FACE="바탕">연산자</FONT><FONT FACE="HY부활M">(Assignment operator)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">대입 연산자의 기본 기호는 '='이고, 보다 발전된 대입 연산자는 x operand = a의 형태를 가지고 있으며 이는 x = x operand a 와 같은 역할을 한다.</FONT>
<P><FONT FACE="바탕">대입 연산자에는 =, +=, -+, *=, /=, %=, &lt;&lt;=, &gt;&gt;=, &gt;&gt;&gt;=, &amp;=, ^=, |= 등이 있다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=231>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">AssignmentOperator.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">class AssignmentOperator {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int a=5;</FONT>
<P>		<FONT FACE="Courier New">int b=5;</FONT>
<P>		<FONT FACE="Courier New">a += 3; //a = a + 3;</FONT>
<P>		<FONT FACE="Courier New">b =+ 3; //b = +3;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(a + &quot;\t&quot; + b);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV058.GIF" BORDER=0 ALIGN=LEFT><B><FONT FACE="바탕">실행</FONT></B>
<IMG SRC="file:///C|/지빠귀/FYXIV059.GIF" BORDER=0 ALIGN=LEFT><B><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">8       5</FONT></B>
<BR>
<P><FONT FACE="바탕">주의할 점은 복합대입연산자의 경우에는 '=' 기호가 연산자 뒤에 나온다는 것이다. 위의 예에서 6번째 줄에서처럼 '='을 앞에 두면 컴파일 오류가 발생하지 않더라도 원치 않는 결과 값을 갖게 될 수 있다.</FONT>
<BR>
<BR>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV060.GIF" BORDER=0 ALIGN=LEFT>
<P> <FONT SIZE=5 COLOR=PURPLE><SPAN STYLE="font-size:20pt;"><B><FONT FACE="Bookman Old Style">2.3   </FONT><FONT FACE="바탕">제어구조</FONT></B></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">제어문은 특정한 조건에 따라서 실행문을 선택하는 분기문과 특정한 실행문을 반복하는 반복문으로 나누어진다.</FONT>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.3.1 </FONT><FONT FACE="바탕">분기문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">분기문은 조건에 맞는 실행문 만을 선택하여 실행함으로써 프로그램의 흐름을 바꾸는데 사용되며, 종류에는 if문과 switch문으로 나뉘어진다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.3.1.1 if </FONT><FONT FACE="바탕">∼</FONT><FONT FACE="HY울릉도M"> else </FONT><FONT FACE="바탕">문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">if문은 프로그램의 흐름을 바꾸는데 사용되는 조건 선택 분기문이다.</FONT>
<BR>
<P><FONT FACE="바탕">기본적인 if문의 사용 방법은 다음과 같다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=92>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">if (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT></I><FONT FACE="Courier New">)</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">1;</FONT>
<P><FONT FACE="Courier New">else</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">2;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">if문의 조건식 결과는 반드시 boolean형이어야 하므로 결과는 true 아니면 false가 된다. 따라서, 조건식이 참이면 문장1이 실행되고 거짓일 경우에는 문장2가 실행된다.</FONT>
<BR>
<BR>
<BR>
<BR>
<BR>
<P><FONT FACE="바탕">다음은 if∼else 문의 예를 보인 것이다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=231>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">IfExample1.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class IfExample1 {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int jumsu = Integer.parseInt(args[0]);</FONT>
<P>		<FONT FACE="Courier New">if( jumsu &gt;= 60 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;60</FONT><FONT FACE="바탕">이상인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">else</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;60</FONT><FONT FACE="바탕">보다</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">작은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV061.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV062.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT></B>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV063.GIF" BORDER=0 ALIGN=LEFT>		<B><FONT FACE="Courier New">java IfExample1 79</FONT></B>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">60</FONT><FONT FACE="바탕">이상인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.</FONT></B>
<BR>
<P><FONT FACE="바탕">수행할 문장이 복문이면 중괄호 &quot;{}&quot;로 묶어준다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=203>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">if (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">1;</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">2;</FONT>
<P>	<FONT FACE="바탕">…</FONT>
<P><FONT FACE="바탕">} </FONT><FONT FACE="Courier New">else {</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">3;</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">4;</FONT>
<P>	<FONT FACE="바탕">…</FONT>
<P><FONT FACE="바탕">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음 예는 if~else에 복문이 사용된 예를 나타낸 것이다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=766 HEIGHT=279>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">IfExample2.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class IfExample2 {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int jumsu = Integer.parseInt(args[0]);</FONT>
<P>		<FONT FACE="Courier New">if( jumsu &gt;= 60 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;60</FONT><FONT FACE="바탕">이상인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">합격</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">하셨습니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>		<FONT FACE="Courier New">else {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;60</FONT><FONT FACE="바탕">보다</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">작은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">불합격</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">하셨습니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV064.GIF" BORDER=0 ALIGN=LEFT><B><FONT FACE="바탕">실행</FONT></B>
<IMG SRC="file:///C|/지빠귀/FYXIV065.GIF" BORDER=0 ALIGN=LEFT>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV066.GIF" BORDER=0 ALIGN=LEFT>		<B><FONT FACE="Courier New">java IfExample2 75</FONT></B>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">60</FONT><FONT FACE="바탕">이상인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.</FONT></B>
<P>		<B><FONT FACE="바탕">합격</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">하셨습니다</FONT><FONT FACE="Courier New">.</FONT></B>
<BR>
<P><FONT FACE="바탕">조건식의 결과가 거짓일 때 실행할 문장이 없으면 else문 이하를 생략(단독 if문)할 수도 있다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=48>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">if (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT></I><FONT FACE="Courier New">)</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">1;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음은 else문 없이 if문 단독으로 사용되는 예를 나타낸 것으로 8번째 줄은 if문과 관계없이 항상 실행된다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=655 HEIGHT=253>
<TD VALIGN=MIDDLE WIDTH=9%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=90%>
<P><FONT FACE="HY타자B">IfExample3.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=9%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT></TD>
<TD VALIGN=TOP WIDTH=90%>
<P><FONT FACE="Courier New">public class IfExample3 {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int jumsu = Integer.parseInt(args[0]);</FONT>
<P>		<FONT FACE="Courier New">if( jumsu &gt;= 60 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;60</FONT><FONT FACE="바탕">이상인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">합격</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">하셨습니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">수고</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">하셨습니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<IMG SRC="file:///C|/지빠귀/FYXIV067.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV068.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT></B>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV069.GIF" BORDER=0 ALIGN=LEFT>		<B><FONT FACE="Courier New">java IfExample3 75</FONT></B>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">60</FONT><FONT FACE="바탕">이상인</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT></B>
<P>		<B><FONT FACE="바탕">합격</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">하셨습니다</FONT><FONT FACE="Courier New">.</FONT></B>
<P>		<B><FONT FACE="바탕">수고</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">하셨습니다</FONT><FONT FACE="Courier New">.</FONT></B>
<BR>
<P><FONT FACE="바탕">if문은 전체가 논리적으로 하나의 실행문이기 때문에 else 다음에 다시 if문이 올 수 있는데 이를 복합 if문이라고 한다. 
</FONT><P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=198>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">if (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT><FONT FACE="Courier New"> 1</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">1;</FONT>
<P><FONT FACE="Courier New">} else if (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT><FONT FACE="Courier New"> 2</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">2;</FONT>
<P><FONT FACE="Courier New">} else if (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT><FONT FACE="Courier New"> 3</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">3;</FONT>
<P><FONT FACE="Courier New">} else {</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">4;</FONT>
<P><FONT FACE="바탕">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">다음은 else if문을 이용하여 여러 개의 조건식을 검사하는 예이다. 입력한 점수에 따라서 해당하는 학점이 출력된다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=655 HEIGHT=408>
<TD VALIGN=MIDDLE WIDTH=9%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=90%>
<P><FONT FACE="HY타자B">IfExample4.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=9%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT></TD>
<TD VALIGN=TOP WIDTH=90%>
<P><FONT FACE="Courier New">public class IfExample4 {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int jumsu = Integer.parseInt(args[0]);</FONT>
<P>		<FONT FACE="Courier New">if( jumsu &gt;= 90 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> A</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}else if( jumsu &gt;= 80 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> B</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}else if( jumsu &gt;= 70 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> C</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}else if( jumsu &gt;= 60 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> D</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}else {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> F</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">재수강</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">대상자입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV070.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV071.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT></B>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV072.GIF" BORDER=0 ALIGN=LEFT>		<B><FONT FACE="Courier New">java IfExample4 85</FONT></B>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> B</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.</FONT></B>
<BR>
<P><FONT FACE="바탕">if문 내에 또 다른 조건식을 포함시킬 수도 있다. 이와 같은 중첩된 if문의 경우 외부의 if∼else문장과 내부의 if∼else문장이 서로 겹쳐서는 안 된다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=196>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">if (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT><FONT FACE="Courier New"> 1</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>	<FONT FACE="Courier New">if (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT><FONT FACE="Courier New"> 1-2</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>		<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">1-1;</FONT>
<P>	<FONT FACE="Courier New">} else {</FONT>
<P>		<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">1-2;</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">} else {</FONT>
<P>	<FONT FACE="바탕">문장</FONT><FONT FACE="Courier New">2;</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음은 복합 if문의 예를 보인 것으로 4번째 줄에 있는 외부 if문의 조건식이 참일 때에만 5번째 줄의 내부 if문이 실행된다. 만약 입력점수가 100점을 초과하면 점수가 잘못 입력된 것으로 간주하고 메시지를 출력한다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=463>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">IfExample5.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT>
<P><FONT FACE="Courier New">19:</FONT>
<P><FONT FACE="Courier New">20:</FONT>
<P><FONT FACE="Courier New">21:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class IfExample5 {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int jumsu = Integer.parseInt(args[0]);</FONT>
<P>		<B><FONT FACE="Courier New">if( jumsu &gt;= 90 ) {</FONT></B>
<P>			<B><FONT FACE="Courier New">if( jumsu &gt; 100 ) {</FONT></B>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">잘못</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">입력된</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>			<B><FONT FACE="Courier New">}</FONT></B><FONT FACE="Courier New">else {</FONT>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> A</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>			<FONT FACE="Courier New">}</FONT>
<P>		<B><FONT FACE="Courier New">}</FONT></B><FONT FACE="Courier New">else if( jumsu &gt;= 80 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> B</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}else if( jumsu &gt;= 70 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> C</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}else if( jumsu &gt;= 60 ) {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> D</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}else {</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> F</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>			<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">재수강</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">대상자입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV073.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT></B>
<P>		<B><FONT FACE="Courier New">java IfExample5 120</FONT></B>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="바탕">잘못</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">입력된</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">점수입니다</FONT><FONT FACE="Courier New">.</FONT></B>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=391>
<TD VALIGN=MIDDLE WIDTH=100%>
<P><FONT COLOR=WHITE><SPAN STYLE="font-size:13pt;"><FONT FACE="바탕">인자(argument) 값이 있는 프로그램의 실행</FONT></SPAN></FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=100%>
<P><FONT FACE="바탕">인자의 수에는 제한이 없지만, 프로그램에서 처리가 되는 인자만큼을 넣어 주어야 한다.</FONT>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• </FONT><FONT FACE="바탕">인자값을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">사용할</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">경우</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">컴파일</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">명령문에는</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">변함이</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">없고</FONT><FONT FACE="Courier New">, </FONT><FONT FACE="바탕">실행은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">자바</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">클래스</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">파일의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">실행문</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">뒤에</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">공백을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">띄우고</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">기록한다</FONT><FONT FACE="Courier New">. </FONT><FONT FACE="바탕">첫</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">번째</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">인자는</FONT><FONT FACE="Courier New"> args[0]</FONT><FONT FACE="바탕">에</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">저장되고</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">다음</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">인자</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">값은</FONT><FONT FACE="Courier New"> args[1]</FONT><FONT FACE="바탕">에</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">저장된다</FONT><FONT FACE="Courier New">. </FONT><FONT FACE="바탕">위의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">프로그램을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">컴파일하고</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">실행시키려면</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">다음과</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">같이</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">한다</FONT><FONT FACE="Courier New">.</FONT></SPAN></FONT>
<BR>
<P>   <FONT FACE="바탕">컴파일 &gt; javac IfExample.java</FONT>
<P>   <FONT FACE="바탕">실 행 &gt; java IfExample 3000</FONT>
<P>   <FONT FACE="바탕">결 과 &gt; 버스</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:11pt;"><FONT FACE="Courier New">• Kawa</FONT><FONT FACE="바탕">를</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">이용하여</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">인자값이</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">있는</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">프로그램을</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">실행시키는</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">방법은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">다음과</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">같다</FONT><FONT FACE="Courier New">.</FONT></SPAN></FONT>
<P>   <FONT FACE="바탕">먼저 새로운 Project를 만든 후 소스코드를 작성한다.</FONT>
<P>   <FONT FACE="바탕">메뉴에서 Project -&gt; Interpreter Option을 선택</FONT>
<P><FONT FACE="바탕">Command Line Argument 체크 옵션은 선택하고 &quot;&gt;&gt;&quot; 버튼을 눌러 인자 값을 공백으로 구분하여 넣어준다.</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.3.1.2 switch </FONT><FONT FACE="바탕">문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">복합 if문은 구현하기가 복잡하고 프로그램의 효율성이 감소되는 단점이 있가 때문에 다중 분지 문제를 해결할 때는 switch 문을 사용한다. switch문은 다중 분지이므로 복합 if문의 논리적인 구조를 간결하게 표현할 수 있다. C언어에서는 switch이지만 파스칼이나 델파이에서는 명칭이 case이다. 
</FONT><BR>
<P><FONT FACE="바탕">switch문은 int형 변수의 값에 따라 다중 조건을 판단하여 선택적으로 실행문을 실행할 수 있도록 해주는 분기문이다. if문과는 달리 조건식이 사용되지 않고, 값을 가지는 변수가 판단 조건으로 사용되며, 연산결과의 기본형은 int형이다. 조건식의 위치에는 int형으로 Promotion 즉, 묵시적 캐스팅이 될 수 있는 형의 변수를 사용해야 한다. switch문의 조건식은 결과 값이 int 형, byte 형, short 형, char 형이 올 수 있으며, 그 외에 boolean 형, float 형, long 형, object reference 형 등은 올 수가 없다. case문 뒤에 사용되는 값(레이블)은 변수를 사용할 수 없고, 반드시 상수를 사용해야 한다. 또, 각각의 case문은 여러 개의 실행문을 기술할 수 있는데, case와 값 사이는 반드시 공백으로 구분을 해 주어야 하며, 중괄호&quot;{ }&quot;는 사용되지 않는다. 해당 case문이 실행된 이후에는 바로 아래에 위치한 실행문으로 흐름이 넘어가기 때문에, 해당 case의 실행문만 실행하고 switch문을 종료하기 위해서는 break문을 사용해야 한다. default문은 조건을 만족하는 경우가 없을 때에 실행되는 문장을 기술한다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=358>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">switch (</FONT><I><FONT FACE="Courier New">int</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>	<FONT FACE="Courier New">case </FONT><I><FONT FACE="바탕">값</FONT><FONT FACE="Courier New">1</FONT></I><FONT FACE="Courier New">:</FONT>
<P>		<FONT FACE="바탕">실행문</FONT><FONT FACE="Courier New"> 1;</FONT>
<P>		<FONT FACE="Courier New">break;</FONT>
<P>	<FONT FACE="Courier New">case </FONT><I><FONT FACE="바탕">값</FONT><FONT FACE="Courier New">2</FONT></I><FONT FACE="Courier New">:</FONT>
<P>		<FONT FACE="바탕">실행문</FONT><FONT FACE="Courier New"> 2;</FONT>
<P>		<FONT FACE="Courier New">break;</FONT>
<BR>
<P>		<FONT FACE="Courier New">......</FONT>
<BR>
<P>	<FONT FACE="Courier New">case </FONT><I><FONT FACE="바탕">값</FONT><FONT FACE="Courier New">N</FONT></I><FONT FACE="Courier New">:</FONT>
<P>		<FONT FACE="바탕">실행문</FONT><FONT FACE="Courier New"> N;</FONT>
<P>		<FONT FACE="Courier New">break;</FONT>
<P>	<FONT FACE="Courier New">default:</FONT>
<P>		<FONT FACE="Courier New">default </FONT><FONT FACE="바탕">실행문</FONT><FONT FACE="Courier New">;</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<BR>
<BR>
<BR>
<BR>
<BR>
<P><FONT FACE="바탕">다음은 switch문의 예를 보여주고 있다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=766 HEIGHT=541>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">SwitchExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT>
<P><FONT FACE="Courier New">19:</FONT>
<P><FONT FACE="Courier New">20:</FONT>
<P><FONT FACE="Courier New">21:</FONT>
<P><FONT FACE="Courier New">22:</FONT>
<P><FONT FACE="Courier New">23:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class SwitchExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<FONT FACE="Courier New">int jumsu = Integer.parseInt(args[0]);</FONT>
<P>		<B><FONT FACE="Courier New">switch( jumsu / 10 ) {</FONT></B>
<P>			<B><FONT FACE="Courier New">case 9 :</FONT></B><FONT FACE="Courier New"> </FONT>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> A</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>				<B><FONT FACE="Courier New">break;</FONT></B>
<P>			<FONT FACE="Courier New">case 8 :</FONT>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> B</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT>
<P>			<FONT FACE="Courier New">case 7 : </FONT>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> C</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT>
<P>			<FONT FACE="Courier New">case 6 : </FONT>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> D</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT>
<P>			<B><FONT FACE="Courier New">default :</FONT></B>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> F</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">당신은</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">재수강</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">대상자입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT>
<P>		<B><FONT FACE="Courier New">}</FONT></B>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV074.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV075.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT></B>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV076.GIF" BORDER=0 ALIGN=LEFT>		<B><FONT FACE="Courier New">java SwitchExample5 90</FONT></B>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="바탕">당신의</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">학점은</FONT><FONT FACE="Courier New"> A</FONT><FONT FACE="바탕">입니다</FONT><FONT FACE="Courier New">.</FONT></B>
<BR>
<BR>
<P><FONT FACE="바탕">다음은 사칙연산을 하기 위한 switch문의 예를 보여주고 있다. switch문의 조건식 결과가 char형일 때에는 다음과 같이 ' '로 묶어 준다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=143>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">SwitchCalculator.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class SwitchCalculator {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<FONT FACE="Courier New">int i ;</FONT>
<P>		<FONT FACE="Courier New">int first, second;</FONT>
<P>		<FONT FACE="Courier New">first = Integer.parseInt(args[0]);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=452>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">SwitchCalculator.java(</FONT><FONT FACE="바탕">계속</FONT><FONT FACE="HY타자B">)</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT>
<P><FONT FACE="Courier New">18:</FONT>
<P><FONT FACE="Courier New">19:</FONT>
<P><FONT FACE="Courier New">20:</FONT>
<P><FONT FACE="Courier New">21:</FONT>
<P><FONT FACE="Courier New">22:</FONT>
<P><FONT FACE="Courier New">23:</FONT>
<P><FONT FACE="Courier New">24:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">second =  Integer.parseInt(args[2]);</FONT>
<P>		<FONT FACE="Courier New">switch(args[1].charAt(0)){</FONT>
<P>			<FONT FACE="Courier New">case '+' : </FONT>
<P>				<FONT FACE="Courier New">System.out.println(first + second);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT>
<P>			<FONT FACE="Courier New">case 'x' :</FONT>
<P>				<FONT FACE="Courier New">System.out.println(first * second);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT>
<P>			<FONT FACE="Courier New">case '/' : </FONT>
<P>				<FONT FACE="Courier New">System.out.println(first / second);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT>
<P>			<FONT FACE="Courier New">case '-' :</FONT>
<P>				<FONT FACE="Courier New">System.out.println(first - second);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT>
<P>			<FONT FACE="Courier New">default :</FONT>
<P>				<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">잘못된</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">연산식입니다</FONT><FONT FACE="Courier New">.&quot;);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV077.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV078.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT></B>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV079.GIF" BORDER=0 ALIGN=LEFT>		<B><FONT FACE="Courier New">java SwitchCalculator 20 + 30</FONT></B>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="Courier New">50</FONT></B>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=31>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">7:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>		<FONT FACE="Courier New">switch(args[1].charAt(0)) {</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">switch문의 charAt() 메소드는 특정 문자열에서 원하는 위치의 문자만을 원할 때 사용한다. args[1].charAt(0)은 두 번째 인자(첫 번째 인자는 args[0]) 값에서 첫 번째 문자 하나를 의미한다.</FONT>
<BR>
<P>
<TABLE BORDER=1 CELLPADDING=2 WIDTH=771 HEIGHT=70>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P>			<FONT FACE="Courier New">case 'x' :</FONT>
<P>				<FONT FACE="Courier New">System.out.println(first * second);</FONT>
<P>				<FONT FACE="Courier New">break;</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">11 : case문의 'x'를 '*'로 바꾸면 안될 수도 있다. 이유는 곱셈에 해당하는 연산자는 * 일지라도 도스모드에서 *를 사용하면 운영체제에서 사용되는 메타문자(* 는 임의의 문자열, ? 는 한 문자)로 인식하기 때문이다.</FONT>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.3.2 </FONT><FONT FACE="바탕">반복문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">반복문은 하나 이상의 실행문을 특정 조건이 만족하는 한 반복해서 실행하는 문장이다. 반복문의 종류에는 while문, do∼while문, for문이 있다. 이러한 반복문을 사용하면 프로그램의 코드 크기를 효율적으로 줄일 수 있다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.3.2.1 while </FONT><FONT FACE="바탕">문</FONT></SPAN></FONT>
<P>  
<P><FONT FACE="바탕">while문은 조건식을 만족하는 동안 반복문을 실행하는데, 조건식을 검사해서 조건식이 참이면 실행문을 반복하고, 거짓이면 while문을 빠져 나온다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=70>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">while (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>	<FONT FACE="바탕">실행문</FONT><FONT FACE="Courier New">;</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">while문의 조건식도 if문과 마찬가지로 반드시 boolean형으로 결과를 반환해야 한다. 자바는 C언어에서처럼 0(Zero)은 false, 0이 아니면 true인 semi-boolean형의 개념이 없으며, 조건 부분에는 반드시 boolean형의 결과가 true 또는 false값을 갖는다. 실행문이 한 줄이면 단문이므로 당연히 중괄호 &quot;{ }&quot;는 사용할 필요가 없다.</FONT>
<P><FONT FACE="바탕">while문은 먼저 조건 부분을 검사하여 결과가 진이면 실행한다. 실행문이 한번 실행되면 다시 조건 부분으로 되돌아와 반복해서 조건을 검사하고 그 결과가 true이면 실행하고, false이면 while문을 빠져 나와 다음 문장으로 넘어간다. 따라서, while문 내의 실행문에는 조건식에 사용되는 변수 등을 조정해 주는 문장이 있어야 while문을 빠져나올 수 있으며, 그렇지 않으면 무한루프에 빠지게 된다. 만약 while문에서 조건 부분의 결과가 처음부터 false가 판명되면 while문 내의 실행문은 실행되지 않는다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 1부터 10까지 더한 결과를 while문을 이용하여 출력하는 예이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=280>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">WhileExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class WhileExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<FONT FACE="Courier New">int i = 1;</FONT>
<P>		<FONT FACE="Courier New">int sum = 0;</FONT>
<P>		<FONT FACE="Courier New">while(i &lt;= 10) {</FONT>
<P>			<FONT FACE="Courier New">sum = sum + i;</FONT>
<P>			<FONT FACE="Courier New">i++;</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">합은</FONT><FONT FACE="Courier New">:&quot; + sum);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.3.2.2 do </FONT><FONT FACE="바탕">∼</FONT><FONT FACE="HY울릉도M"> while </FONT><FONT FACE="바탕">문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">do∼while문은 while문과 유사한데, 먼저 while문은 조건식을 먼저 검사하고 실행문이 반복되기 때문에 처음 실행 조건이 false이면 한번도 실행되지 않는다. 반면에 do∼while문은 실행된 후 조건식을 검사하므로 조건식의 결과가 true이건 false이건 무조건 한번은 실행이 된다. 실행문이 한 줄이면 단문이므로 중괄호  &quot;{ }&quot; 를 생략할 수 있다. while문은 파스칼의 while∼do와 비슷하고 do∼while은 repeat∼until과 유사하다. 
</FONT><BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=70>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">do {</FONT>
<P>	<FONT FACE="바탕">실행문</FONT><FONT FACE="Courier New">;</FONT>
<P><FONT FACE="Courier New">} while (</FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT></I><FONT FACE="Courier New">);</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음은 do ∼ while 문을 이용하여 1부터 10까지의 합을 구하는 프로그램이다.</FONT>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=280>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">DoWhileExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class DoWhileExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<FONT FACE="Courier New">int i = 1;</FONT>
<P>		<FONT FACE="Courier New">int sum = 0;</FONT>
<P>		<FONT FACE="Courier New">do{</FONT>
<P>			<FONT FACE="Courier New">sum = sum + i;</FONT>
<P>			<FONT FACE="Courier New">i++;</FONT>
<P>		<FONT FACE="Courier New">}while(i &lt;= 10); </FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">합은</FONT><FONT FACE="Courier New">:&quot; + sum);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.3.2.3 for </FONT><FONT FACE="바탕">문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">for문은 제어 조건을 한꺼번에 지정한다는 점이 다른 반복문과는 다르다. 따라서, 정확한 반복횟수를 알고있을 때는 for문이 가장 유용하다. for문의 경우에도 실행문이 한 줄이면 단문이므로 중괄호 &quot;{ }&quot;를 생략할 수 있다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=501 HEIGHT=70>
<TD VALIGN=MIDDLE WIDTH=2%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=97%>
<P><FONT FACE="Courier New">for(</FONT><I><FONT FACE="바탕">초기값</FONT></I><FONT FACE="Courier New"> ; </FONT><I><FONT FACE="Courier New">boolean</FONT><FONT FACE="바탕">형</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">조건식</FONT></I><FONT FACE="Courier New"> ; </FONT><I><FONT FACE="바탕">증감값</FONT></I><FONT FACE="Courier New">) {</FONT>
<P>	<FONT FACE="바탕">실행문</FONT><FONT FACE="Courier New">;</FONT>
<P><FONT FACE="바탕">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<BR>
<BR>
<P><FONT FACE="바탕">for문의 각 구성 요소는 생략할 수도 있으며, 각각을 설명하면 다음과 같다.</FONT>
<BR>
<P><FONT FACE="바탕">- 초기값 : for문이 시작되기 전에 실행되며 변수에 대한 초기화를 해줄 수 있다. 또 콤마를 사용하여 여러 개의 변수를 다중으로 적용할 수도 있지만 선언은 한번만 가능하다.</FONT>
<P><FONT FACE="바탕">- boolean형 조건식 : 조건식의 결과는 true나 false가 되어야 하며, false면 루프의 실행문은 한번도 실행되지 않는다.</FONT>
<P><FONT FACE="바탕">- 증감값 : 반복되는 변수의 값을 증.감 시킨다. 증.감값도 초기값에서 처럼 콤마를 사용하여 여러 개의 변수에 다중으로 증.감값을 적용할 수 있다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 for문을 이용하여 1부터 10까지의 합을 구하는 프로그램이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=236>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">ForExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class ForExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<FONT FACE="Courier New">int sum = 0;</FONT>
<P>		<FONT FACE="Courier New">for (int i=0; i&lt;=10; i++) {</FONT>
<P>			<FONT FACE="Courier New">sum = sum + i;</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">합은</FONT><FONT FACE="Courier New">:&quot; + sum);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">for문을 중첩해서 다중 for문으로 사용하면 2차원 이상의 배열을 다루는데 유용하게 사용할 수 있다. 유의할 점은 루프의 몸체가 서로 겹치지 않도록 해야한다. 다중 for문에서 루프가 겹쳐졌을 때 문법적 오류가 발생하지 않아도 논리적인 오류를 발생시킬 수 있다.</FONT>
<BR>
<P><FONT FACE="바탕">다음은 다중 for문을 이용하여 구구단을 출력하는 예를 보인 것이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=258>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">MultiForExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class MultiForExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<FONT FACE="Courier New">for (int i=1; i&lt;=9; i++) {</FONT>
<P>			<FONT FACE="Courier New">for (int j=2; j&lt;=9; j++) {</FONT>
<P>				<FONT FACE="Courier New">System.out.print(j + &quot;*&quot; + i + &quot;=&quot; + i*j + '\t');</FONT>
<P>			<FONT FACE="Courier New">}</FONT>
<P>			<FONT FACE="Courier New">System.out.println();</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">다음은 다중 for문을 이용하여 1부터 100사이의 소수(prime number)를 출력하는 예제이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=408>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">PrimeNumber.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT>
<P><FONT FACE="Courier New">15:</FONT>
<P><FONT FACE="Courier New">16:</FONT>
<P><FONT FACE="Courier New">17:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class PrimeNumber {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;======= Prime Number =======&quot;);</FONT>
<P>		<FONT FACE="Courier New">int cnt;</FONT>
<P>		<FONT FACE="Courier New">for (int i=1; i&lt;=100; i++) {</FONT>
<P>			<FONT FACE="Courier New">cnt = 0;</FONT>
<P>			<FONT FACE="Courier New">for (int j=1; j&lt;=i; j++) {</FONT>
<P>				<FONT FACE="Courier New">if(i%j == 0) {</FONT>
<P>					<FONT FACE="Courier New">cnt++;</FONT>
<P>				<FONT FACE="Courier New">}</FONT>
<P>			<FONT FACE="Courier New">}</FONT>
<P>			<FONT FACE="Courier New">if(cnt == 2) {</FONT>
<P>				<FONT FACE="Courier New">System.out.print(i + &quot; &quot;);</FONT>
<P>			<FONT FACE="Courier New">}</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<BR>
<P><FONT SIZE=4 COLOR=PURPLE><SPAN STYLE="font-size:16pt;"><FONT FACE="HY부활M">2.3.3 </FONT><FONT FACE="바탕">분기문</FONT><FONT FACE="HY부활M">(Jump statement)</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">분기문은 프로그램의 실행 순서를 지정된 곳으로 이동시키는 것으로 반복문에서 빠져 나올 때 사용한다. 분기문에는 break문과 continue문 그리고 return 문이 있다. goto문은 리터럴에는 포함되어 있으나 사용하지 않는다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.3.3.1 break </FONT><FONT FACE="바탕">문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">break문은 반복문 내의 어떤 곳이든지 위치할 수 있으며, 처리 도중에 break 문을 만나면 반복문을 곧바로 빠져 나온다. 특히 다중 반복문일 경우 break 문을 만나면 그 break 문이 속한 반복문만 빠져나오게 된다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=31>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">break [</FONT><I><FONT FACE="Courier New">label</FONT></I><FONT FACE="Courier New">];</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<BR>
<P><FONT FACE="바탕">다음은 break 문을 사용한 예이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=258>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">BreakExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class BreakExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<FONT FACE="Courier New">for (int i=0; i&lt;10; i++) {</FONT>
<P>			<FONT FACE="Courier New">if (i==5) {</FONT>
<P>				<B><FONT FACE="Courier New">break;</FONT></B>
<P>			<FONT FACE="Courier New">}</FONT>
<P>			<FONT FACE="Courier New">System.out.println(i);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P><FONT FACE="바탕">위 프로그램에서 break문을 만나면 for문을 빠져나와 for문 바로 다음 문장을 실행하게 된다.</FONT>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.3.3.2 continue </FONT><FONT FACE="바탕">문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">continue문 또한 반복문 내의 어떤 곳이든지 위치할 수 있으며 continue문을 만나면 반복문의 맨 처음으로 제어가 이동한다. 따라서, 이 문의 뒷부분은 실행되지 않게된다. 
</FONT><BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=31>
<TD VALIGN=TOP WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">continue [</FONT><I><FONT FACE="Courier New">label</FONT></I><FONT FACE="Courier New">];</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음은 continue 문을 사용한 예이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=253>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">ContinueExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class ContinueExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<FONT FACE="Courier New">for (int i=0; i&lt;10; i++) {</FONT>
<P>			<FONT FACE="Courier New">if (i==5) {</FONT>
<P>				<B><FONT FACE="Courier New">continue;</FONT></B>
<P>			<FONT FACE="Courier New">}</FONT>
<P>			<FONT FACE="Courier New">System.out.println(i);</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">위 프로그램에서 continue문을 만나면 아래의 출력문을 실행하지 않고 반복문의 처음으로 가서 계속 수행한다.</FONT>
<P><FONT FACE="바탕">continue문이나 break문을 둘러싸고 있는 루프가 둘 이상일 때는 레이블이 유용하게 사용될 수 있다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=404 HEIGHT=114>
<TD VALIGN=MIDDLE WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><I><FONT FACE="Courier New">label</FONT></I><FONT FACE="Courier New"> : </FONT><FONT FACE="바탕">반복문</FONT><FONT FACE="Courier New"> {</FONT>
<P>		<FONT FACE="바탕">반복문</FONT><FONT FACE="Courier New"> {</FONT>
<P>			<FONT FACE="Courier New">continue </FONT><I><FONT FACE="Courier New">label</FONT></I><FONT FACE="Courier New">;</FONT>
<P>		<FONT FACE="바탕">}</FONT>
<P>	<FONT FACE="바탕">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">다음은 label문이 사용된 예를 보여주고 있다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=342>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">ContinueExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT>
<P><FONT FACE="Courier New">12:</FONT>
<P><FONT FACE="Courier New">13:</FONT>
<P><FONT FACE="Courier New">14:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class LabelExample {</FONT>
<BR>
<P>	<FONT FACE="Courier New">public static void main(String[] args){</FONT>
<P>		<B><FONT FACE="Courier New">outer :</FONT></B><FONT FACE="Courier New"> </FONT>
<P>		<FONT FACE="Courier New">for (int i=0; i&lt;3; i++) {</FONT>
<P>			<FONT FACE="Courier New">for (int j=0; j&lt;3; j++) {</FONT>
<P>				<FONT FACE="Courier New">if (j==2) {</FONT>
<P>					<B><FONT FACE="Courier New">break outer;</FONT></B>
<P>				<FONT FACE="Courier New">}</FONT>
<P>				<FONT FACE="Courier New">System.out.println(i + &quot;\t&quot; + j);</FONT>
<P>			<FONT FACE="Courier New">}</FONT>
<P>		<FONT FACE="Courier New">}</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT COLOR=PURPLE><SPAN STYLE="font-size:13pt;"><FONT FACE="HY울릉도M">2.3.3.3 return </FONT><FONT FACE="바탕">문</FONT></SPAN></FONT>
<BR>
<P><FONT FACE="바탕">return문은 메소드의 실행을 끝내고 호출된 메소드로 제어를 넘기는 문장이다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=356 HEIGHT=31>
<TD VALIGN=TOP WIDTH=3%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=96%>
<P><FONT FACE="Courier New">return [</FONT><I><FONT FACE="바탕">표현식</FONT><FONT FACE="Courier New"> or </FONT><FONT FACE="바탕">변수</FONT></I><FONT FACE="Courier New">];</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<BR>
<P><FONT FACE="바탕">return문만 사용될 때에는 호출한 메소드로 제어만 넘어가지만 return문 뒤의 식과 함께 사용되면 식의 값과 제어가 함께 넘어간다. 즉, return문은 호출한 함수에게 결과 값을 넘겨주는 역할을 한다.</FONT>
<BR>
<P>
<TABLE BORDER=0 CELLPADDING=2 WIDTH=771 HEIGHT=274>
<TD VALIGN=MIDDLE WIDTH=7%>
<BR></TD>
<TD VALIGN=MIDDLE WIDTH=92%>
<P><FONT FACE="HY타자B">ReturnExample.java</FONT></TD>
</tr>
<TR>
<TD VALIGN=TOP WIDTH=7%>
<P><FONT FACE="Courier New">1:</FONT>
<P><FONT FACE="Courier New">2:</FONT>
<P><FONT FACE="Courier New">3:</FONT>
<P><FONT FACE="Courier New">4:</FONT>
<P><FONT FACE="Courier New">5:</FONT>
<P><FONT FACE="Courier New">6:</FONT>
<P><FONT FACE="Courier New">7:</FONT>
<P><FONT FACE="Courier New">8:</FONT>
<P><FONT FACE="Courier New">9:</FONT>
<P><FONT FACE="Courier New">10:</FONT>
<P><FONT FACE="Courier New">11:</FONT></TD>
<TD VALIGN=TOP WIDTH=92%>
<P><FONT FACE="Courier New">public class ReturnExample {</FONT>
<P>	<FONT FACE="Courier New">public static void main(String[] args) {</FONT>
<P>		<FONT FACE="Courier New">int a = 20;</FONT>
<P>		<FONT FACE="Courier New">int b = 30;</FONT>
<P>		<FONT FACE="Courier New">System.out.println(&quot;</FONT><FONT FACE="바탕">넓이는</FONT><FONT FACE="Courier New"> : &quot; + </FONT><B><FONT FACE="Courier New">calcRect(a, b)</FONT></B><FONT FACE="Courier New">);</FONT>
<P>	<FONT FACE="Courier New">}</FONT>
<BR>
<P>	<FONT FACE="Courier New">public static </FONT><B><FONT FACE="Courier New">int</FONT></B><FONT FACE="Courier New"> calcRect(int width, int height) {</FONT>
<P>		<B><FONT FACE="Courier New">return (width * height);</FONT></B>
<P>	<FONT FACE="Courier New">}</FONT>
<P><FONT FACE="Courier New">}</FONT></TD>
<CAPTION ALIGN=BOTTOM>
</CAPTION>

</tr>
</TABLE>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV080.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV081.GIF" BORDER=0 ALIGN=LEFT>
<P><B><FONT FACE="바탕">실행</FONT><FONT FACE="Courier New"> </FONT><FONT FACE="바탕">결과</FONT></B>
<P>		<B><FONT FACE="바탕">넓이는</FONT><FONT FACE="Courier New"> : 600</FONT></B>
<BR>
<BR>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV082.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV083.GIF" BORDER=0 ALIGN=LEFT>
<IMG SRC="file:///C|/지빠귀/FYXIV084.GIF" BORDER=0 ALIGN=LEFT>
<P ALIGN=RIGHT>
<IMG SRC="file:///C|/지빠귀/FYXIV085.GIF" BORDER=0 ALIGN=LEFT><FONT SIZE=7 COLOR=WHITE><SPAN STYLE="font-size:35pt;"><FONT FACE="바탕">[객체지향 프로그래밍]</FONT></SPAN></FONT>
<BR>
<BR>
<P><FONT SIZE=4><SPAN STYLE="font-size:15pt;"><FONT FACE="바탕">C언어나 Pascal과 같은 프로시저를 기반으로 하는 구조적 프로그래밍(Procedure Oriented Programming)에서는 프로그램 내에서 일어나는 모든 변화와 사건 등을 프로그래머가 직접 기술해야 하며, 프로그램의 흐름을 간결하고, 단순하게 만들어 놓아야 좋은 프로그램으로 인정받았다. 그러나 이러한 기법은 프로그램의 크기가 커지고, 업그레이드 및 재사용성에 있어서의 한계점이 약점으로 나타나기 시작했다.</FONT></SPAN></FONT>
<BR>
<P><FONT SIZE=4><SPAN STYLE="font-size:15pt;"><FONT FACE="바탕">객체 지향 프로그래밍(OOP : Object Oriented Programming)에 대한 개념은 1960년대 Simula라는 언어에서 처음 소개되었는데, 이후 C++ 등과 같은 언어의 성공과 함께 새로운 프로그래밍 기법으로 등장했다. 객체 지향 프로그래밍에서는 객체에게 자신이 원하는 작업을 하라는 메시지를 전달하는 형태로 프로그램을 기술한다. 일반적으로 객체지향 프로그래밍을 사용하면 구조적 프로그래밍에 비해 모듈화가 용이하며 객체의 여러 가지 특성을 사용하여 소프트웨어 재사용과 확장성을 높일 수 있다. 이는 바로 소프트웨어 개발 시간의 단축에도 크게 기여한다.</FONT></SPAN></FONT>
<BR>
<P>
<IMG SRC="file:///C|/지빠귀/FYXIV086.GIF" BORDER=0 ALIGN=LEFT><FONT SIZE=4><SPAN STYLE="font-size:15pt;"><FONT FACE="바탕">자동차를</FONT></SPAN></FONT>
<IMG SRC="file:///C|/지빠귀/FYXIV087.GIF" BORDER=0 ALIGN=LEFT><FONT SIZE=4><SPAN STYLE="font-size:15pt;"><FONT FACE="바탕"> 예로 들어 구조적 프로그래밍 방식과 객체 지향 프로그램 방식을 설명하면, 구조적 프로그래밍 방식의 경우 원하는 목적지까지 가기 위해 자동차를 출발하려면 키를 꽂고 시동을 건 다음 기어를 넣고 가속 페달을 밟는 여러 가지 절차를 수행해야 한다. 그러나 객체 지향 프로그래밍 방법에서는 &quot;출발!&quot;이라는 메시지의 전달만 있으면 자동차를 출발시키고, 뿐만 아니라 &quot;정지!&quot;이라는 메시지만으로 차를 정지시키는 방식이다.</FONT></SPAN></FONT>
<BR>
<P><FONT SIZE=4><SPAN STYLE="font-size:15pt;"><FONT FACE="바탕">이장에서는 주로 객체지향 프로그래밍 언어에서 나타나는 3가지 특징인 은닉(Encapsulation), 상속(Inheritance), 다형성(Polymorphism)에 대하여 설명하고 클래스, 변수, 메소드 앞에 사용되어 특정한 의미를 갖게 하는 제한자(Modifier)에 대해서도 자세하게 알아보도록 하자.</FONT></SPAN></FONT>
</body>

</html>

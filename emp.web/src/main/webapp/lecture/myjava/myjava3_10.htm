<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<link href="java.css" type="text/css">
</head>
<body bgcolor="white" text="black" link="blue" vlink="purple" alink="red">
	<table cellpadding="0" cellspacing="0" width="650">
    <tr>
        <td width="76" bgcolor="#CCCCCC">
		<P class="TitleNumber" align="center">3.10</P></td>
        <td width="518">
        <p class="TitleTitle" align="left"> this와 super</p></td>
    </tr>
	</table>
	<table border="0" cellpadding="0" cellspacing="2" width="650">
    <tr>
        <td width="1101">
		<ul>      
		<P>앞에서 super에 대해서 간단하게 소개했었다. 여기서는 this와 비교하여 그 사용법을 좀 더 자세하게 설명하기로 한다.
		<P>this는 &quot;this.&quot;를 이용하면 자신의 object를 가리길 수 있고, &quot;this()&quot;를 사용하면 자신의 생성자를 호출 할 수 있다. 
		<P>super는 this와는 반대되는 개념으로 &quot;super.&quot;를 이용하면 부모클래스의 메소드 또는 변수를 참조할 수 있으며, 상속받는 전제하에 부모클래스의 생성자를 호출할 수도 있다..
		<P>먼저 this가 사용되는 예는 다음과 같다.
		<P>
		<TABLE BORDER=0 CELLPADDING=2 WIDTH="550">
			<TD WIDTH=7%></td>
			<TD WIDTH=92%>
			<P>Person.java</TD>
		</tr>
		</TABLE>
		<TABLE BORDER=0 CELLPADDING=2 WIDTH="550">
		<TR>
			<TD WIDTH=7%>
			<P class="CNumber">1:
			<P class="CNumber">2:
			<P class="CNumber">3:
			<P class="CNumber">4:
			<P class="CNumber">5:
			<P class="CNumber">6:
			<P class="CNumber">7:
			<P class="CNumber">8:
			<P class="CNumber">9:
			<P class="CNumber">10:
			<P class="CNumber">11:
			<P class="CNumber">12:
			<P class="CNumber">13:
			<P class="CNumber">14:
			<P class="CNumber">15:
			<P class="CNumber">16:
			<P class="CNumber">17:</TD>
			<TD WIDTH=92%>
			<P class="CStep1">public class Person {
			<P class="CStep2">public String name;
			<P class="CStep2">public int age;
			<P class="CStep2">public Person(String name, int age) {
			<P class="CStep3"><B>this.</B>name = name;
			<P class="CStep3"><B>this.</B>age = age;
			<P class="CStep2">}
			<P class="CStep2">public Person(String name) {
			<P class="CStep3"><B>this(name, 0);</B>
			<P class="CStep2">}
			<P class="CStep2">public Person() {
			<P class="CStep3"><B>this(null, 0);</B>
			<P class="CStep2">}
			<P class="CStep2">public String getDetails() {
			<P class="CStep3">return &quot;이름: &quot; + name + &quot;\t나이: &quot; + age;
			<P class="CStep2">}
			<P class="CStep1">}</TD>
		</tr>
		</TABLE>
		<p>
		<TABLE BORDER=1 CELLPADDING=2 WIDTH=550>
			<TD WIDTH=7%>
			<P class="CNumber">4:
			<P class="CNumber">5:
			<P class="CNumber">6:
			<P class="CNumber">7</TD>
			<TD WIDTH=92%>
			<P class="CStep1">public Person(String name, int age) {
			<P class="CStep2"><B>this.</B>name = name;
			<P class="CStep2"><B>this.</B>age = age;
			<P class="CStep1">}</TD>
		</tr>
		</TABLE>
		<P>'this.'은 생성자 또는 메소드 내에서 사용되며, 동일 클래스 내의 멤버를 참조할 수 있다.
		<P>
		<TABLE BORDER=1 CELLPADDING=2 WIDTH=550>
			<TD WIDTH=7%>
			<P class="CNumber">8:
			<P class="CNumber">9:
			<P class="CNumber">10:</TD>
			<TD WIDTH=92%>
			<P class="CStep1">public Person(String name) {
			<P class="CStep2"><B>this(name, 0)</B>;
			<P class="CStep1">}</TD>
		</tr>
		</TABLE>
		<P>'this()'는 생성자 내에서만 사용되며, 동일 클래스 내의 다른 생성자를 참조할 수 있고 반드시 생성자 내의 첫 번째 줄에 기술해야한다.
		<P>다음은 super가 사용되는 예를 보인 것이다.
		<P>
		<TABLE BORDER=0 CELLPADDING=2 WIDTH=550>
			<TD WIDTH=7%></td>
			<TD WIDTH=92%>
			<P>Student.java</TD>
		</tr>
		</TABLE>
		<TABLE BORDER=0 CELLPADDING=2 WIDTH=550>
		<TR>
			<TD WIDTH=7%>
			<P class="CNumber">1:
			<P class="CNumber">2:
			<P class="CNumber">3:
			<P class="CNumber">4:
			<P class="CNumber">5:
			<P class="CNumber">6:
			<P class="CNumber">7:
			<P class="CNumber">8:
			<P class="CNumber">9:
			<P class="CNumber">10:
			<P class="CNumber">11:
			<P class="CNumber">12:
			<P class="CNumber">13:
			<P class="CNumber">14:</TD>
			<TD WIDTH=92%>
			<P class="CStep1">public class Student extends Person {
			<P class="CStep2">public String studentID;
			<P class="CStep2">public Student(String name, int age, String studentID) {
			<P class="CStep3"><B>super(name, age);</B>
			<P class="CStep3">this.studentID = studentID;
			<P class="CStep2">}
			<P class="CStep2">public Student(String name, int age) {
			<P class="CStep3">this(name, age, null);
			<P class="CStep2">}
			<P class="CStep3">public String getDetails() {
			<P class="CStep2">return super.getDetails() + &quot;\t학번: &quot; + studentID;
			<P class="CStep2">}
			<P class="CStep1">}</TD>
		</tr>
		</TABLE>
		<P>
		<TABLE BORDER=1 CELLPADDING=2 WIDTH=550>
			<TD WIDTH=7%>
			<P class="CNumber">4:
			<P class="CNumber">5
			<P class="CNumber">6:
			<P class="CNumber">7:</TD>
			<TD WIDTH=92%>
			<P class="CStep1">public Student(String name, int age, String studentID) {
			<P class="CStep2"><B>super(name, age);</B>
			<P class="CStep2">this.studentID = studentID;
			<P class="CStep1">}</TD>
		</tr>
		</TABLE>
		<P>'super()'는 생성자 내에서만 사용가능하며 부모클래스의 생성자를 호출하는데 사용된다. this()와 마찬가지로 생성자 내의 첫 번째 줄에 와야한다. 생성자 내에는 this() 또는 super()가 반드시 있어야 하는데, 이를 기술하지 않으면 묵시적으로 super()가 삽입되어 부모클래스의 기본 생성자를 호출한다.
		<P>
		<TABLE BORDER=1 CELLPADDING=2 WIDTH=550>
			<TD WIDTH=7%>
			<P class="CNumber">11:
			<P class="CNumber">12:
			<P class="CNumber">13:</TD>
			<TD WIDTH=92%>
			<P class="CStep1">public String getDetails() {
			<P class="CStep2">return super.getDetails() + 			&quot;\t학번: &quot; + studentID;
			<P class="CStep1">}</TD>
		</tr>
		</TABLE>
		<P>'super.'는 부모클래스의 멤버를 참조하는데 사용되는데 특히 재정의된 메소드에서 현재클래스의 메소드와 부모클래스의 메소드를 구분하여 호출할 때 유용하다.
		<P>다음은 앞의 두 클래스를 테스트하는 예이다.
		<P>
		<TABLE BORDER=0 CELLPADDING=2 WIDTH=550>
			<TD WIDTH=7%></td>
			<TD WIDTH=92%>
			<P>TestThisSuper.java</TD>
		</tr>
		</TABLE>
		<TABLE BORDER=0 CELLPADDING=2 WIDTH=550>
		<TR>
			<TD WIDTH=7%>
			<P class="CNumber">1:
			<P class="CNumber">2:
			<P class="CNumber">3:
			<P class="CNumber">4:
			<P class="CNumber">5:
			<P class="CNumber">6:
			<P class="CNumber">7:
			<P class="CNumber">8:</TD>
			<TD WIDTH=92%>
			<P class="CStep1">class TestThisSuper {
			<P class="CStep2">public static void main(String[] args) {
			<P class="CStep3">Person p = new Person(&quot;홍길동&quot;, 25);
			<P class="CStep3">System.out.println( p.getDetails() );
			<P class="CStep3">Student s = new Student(&quot;허준&quot;, 30, &quot;20001234&quot;);
			<P class="CStep3">System.out.println( s.getDetails() );
			<P class="CStep2">}
			<P class="CStep1">}</TD>
		</tr>
		</TABLE>
		<table width="400" cellpadding="0" cellspacing="0">
		<tr>
			<td width="400"><P class="RResult">실행 결과</td>
		</tr>
		</table>
		<table width="400" cellpadding="0" cellspacing="0">
		<tr>
			<td width="400">
			<P class="Result">이름: 홍길동    나이: 25
			<P class="Result">이름: 허준      나이: 30        학번: 20001234</td>
			</tr>
		</table>
		</ul></td>
    </tr>
	</table>
</body>
</html>